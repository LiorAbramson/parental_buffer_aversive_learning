DROI_mPFC_cond2$contrast <- rep(c("noise_baseline","plus_minus"),times=nrow(valid_subj))
DROI_mPFC_cond2 <- reshape(DROI_mPFC_cond2, timevar="contrast",idvar="Subject", direction="wide")
DROI_mPFC_cond2$order <- "cond2"
#combine conditions
DROI_mPFC <- rbind(DROI_mPFC_cond1,DROI_mPFC_cond2)
#get parental context information
DROI_mPFC <- merge(DROI_mPFC,DParentInfoLong, by=c("Subject","order"), all.x=T, all.y=F)
#merge with sex and age
DROI_mPFC <- merge(DROI_mPFC,DBehav_Wide[,c("Subject","SEX","MRI_AGE")],
by="Subject", all.x=T, all.y=F)
#turn the independent variables to numeric and scale them
DROI_mPFC <- DROI_mPFC %>%
dplyr::mutate(SEX_num = ifelse(SEX=="m",0,1),
SEX_num_c = scale(SEX_num,scale=F),
Parent_Alone_num = ifelse(Parent_Alone=="Alone",0,1),
Parent_Alone_num_c = scale(Parent_Alone_num,scale=F),
MRI_AGE_c = scale(MRI_AGE, scale=F))
#create a wide format for later plotting and visualization purposes
DROI_mPFC_wide <- reshape(DROI_mPFC, timevar="Parent_Alone",idvar="Subject", direction="wide")
#age
describe(DROI_mPFC$MRI_AGE[DROI_mPFC$Parent_Alone=="Parent"]) #choose only one row per subject (doesn't matter which)
#sex
summary(as.factor(DROI_mPFC$SEX[DROI_mPFC$Parent_Alone=="Parent"]))
#look at the descriptive statistics
describeBy (data= DROI_mPFC, mPFC_activation.noise_baseline~Parent_Alone)
#multilevel linear regression- main analysis
lmer_mPFC_noise_baseline<-lmer(data= DROI_mPFC, mPFC_activation.noise_baseline~Parent_Alone_num_c+(1|Subject))
report(lmer_mPFC_noise_baseline)
#analysis controlling for age and sex
lmer_mPFC_noise_baseline_confounds <- lmer(data=DROI_mPFC, mPFC_activation.noise_baseline~
Parent_Alone_num_c*SEX_num_c +
Parent_Alone_num_c*MRI_AGE_c + (1|Subject))
report(lmer_mPFC_noise_baseline_confounds)
#look at the descriptive statistics
describeBy (data= DROI_mPFC, mPFC_activation.plus_minus~Parent_Alone)
#multilevel linear regression- main analysis
lmer_mPFC_plus_minus<-lmer(data= DROI_mPFC, mPFC_activation.plus_minus~Parent_Alone_num_c+(1|Subject))
report(lmer_mPFC_plus_minus)
#analysis controlling for age and sex
lmer_mPFC_plus_minus_confounds <- lmer(data=DROI_mPFC, mPFC_activation.plus_minus~
Parent_Alone_num_c*SEX_num_c +
Parent_Alone_num_c*MRI_AGE_c +(1|Subject))
report(lmer_mPFC_plus_minus_confounds)
#see how many subjects show decrease and how many show increase according to parental context
DROI_mPFC_wide <- DROI_mPFC_wide %>%
mutate(trend_mPFC_plusmin = ifelse(mPFC_activation.plus_minus.Parent>mPFC_activation.plus_minus.Alone,1,
ifelse(mPFC_activation.plus_minus.Parent<mPFC_activation.plus_minus.Alone,-1,NA))
)
DROI_mPFC <- merge(DROI_mPFC,DROI_mPFC_wide[,c("Subject","trend_mPFC_plusmin")],
by="Subject", all.x=T, all.y=F)
#visualize results - separate colors for partcipants that showed increase or decrease in parental presence vs absence
plot_mPFC_plusmin <- ggplot(data = DROI_mPFC,
aes(group=interaction(Subject,trend_mPFC_plusmin), x=Parent_Alone,y = mPFC_activation.plus_minus, color=as.factor(trend_mPFC_plusmin)))+
geom_line(aes(group=interaction(Subject,trend_mPFC_plusmin), x=Parent_Alone,y=mPFC_activation.plus_minus, color=as.factor(trend_mPFC_plusmin)), size=1)+
stat_summary(fun=mean,geom="line",lwd=2,color="black",aes(group=1))+
scale_color_brewer(palette="Set2")+
theme_classic() +
labs (x = "", y = "Activation (CS+ vs. CS-)", title="")+
theme(axis.text = element_text(size = 40) , axis.title = element_text(size = 40))+
theme(legend.position="none", plot.title = element_text(hjust = 0.5, size=50))+
scale_x_discrete(expand = expansion(mult=c(0.4,2)), labels=c("absence", "presence"))+
scale_y_continuous(limits = c(-1.2, 1.2), breaks = seq(-1,1,.5))
#contrast 1
DROI_amyg_cond1 <- read.csv ("data/ROI_juelich_thr60_cmamyg_bilateral_resample_NL6Asym_cond1.csv")
DROI_amyg_cond1$Subject <- rep(valid_subj$Subject, each=2)
DROI_amyg_cond1$Subject <- as.numeric(gsub("sub-","",DROI_amyg_cond1$Subject))
DROI_amyg_cond1$contrast <- rep(c("noise_baseline","plus_minus"),times=nrow(valid_subj))
DROI_amyg_cond1 <- reshape(DROI_amyg_cond1, timevar="contrast",idvar="Subject", direction="wide")
DROI_amyg_cond1$order <- "cond1"
#contrast 2
DROI_amyg_cond2 <- read.csv ("data/ROI_juelich_thr60_cmamyg_bilateral_resample_NL6Asym_cond2.csv")
DROI_amyg_cond2$Subject <- rep(valid_subj$Subject, each=2)
DROI_amyg_cond2$Subject <- as.numeric(gsub("sub-","",DROI_amyg_cond2$Subject))
DROI_amyg_cond2$contrast <- rep(c("noise_baseline","plus_minus"),times=nrow(valid_subj))
DROI_amyg_cond2 <- reshape(DROI_amyg_cond2, timevar="contrast",idvar="Subject", direction="wide")
DROI_amyg_cond2$order <- "cond2"
#combine conditions
DROI_amyg <- rbind(DROI_amyg_cond1,DROI_amyg_cond2)
#merge with parent/alone version
DROI_amyg <- merge(DROI_amyg,DParentInfoLong, by=c("Subject","order"), all.x=T, all.y=F)
#merge with sex and age
DROI_amyg <- merge(DROI_amyg,DBehav_Wide[,c("Subject","SEX","MRI_AGE")],
by="Subject", all.x=T, all.y=F)
#turn the independent variables to numeric and scale them
#create age groups- divide the sample according to children (under 11) and adolescents (age cutoff according to gee 2014)
DROI_amyg <- DROI_amyg %>%
dplyr::mutate(SEX_num = ifelse(SEX=="m",0,1),
SEX_num_c = scale(SEX_num,scale=F),
Parent_Alone_num = ifelse(Parent_Alone=="Alone",0,1),
Parent_Alone_num_c = scale(Parent_Alone_num,scale=F),
MRI_AGE_c = scale(MRI_AGE, scale=F))
#create a wide format for later plotting and visualization purposes
DROI_amyg_wide <- reshape(DROI_amyg, timevar="Parent_Alone",idvar="Subject", direction="wide")
#look at the descriptive statistics
describeBy (data= DROI_amyg, amyg_activation.plus_minus~Parent_Alone)
describeBy (data= DROI_amyg, amyg_activation.plus_minus~Parent_Alone)
#multilevel linear regression- main analysis
lmer_amyg_plus_minus<-lmer(data= DROI_amyg, amyg_activation.plus_minus~Parent_Alone_num_c+(1|Subject))
report(lmer_amyg_plus_minus)
#look at the descriptive statistics
describeBy (data= DROI_mPFC, mPFC_activation.noise_baseline~Parent_Alone)
describeBy (data= DROI_mPFC, mPFC_activation.noise_baseline~Parent_Alone)
#multilevel linear regression- main analysis
lmer_mPFC_noise_baseline<-lmer(data= DROI_mPFC, mPFC_activation.noise_baseline~Parent_Alone_num_c+(1|Subject))
report(lmer_mPFC_noise_baseline)
round(5.39e-03,2)
#look at the descriptive statistics
describeBy (data= DROI_mPFC, mPFC_activation.plus_minus~Parent_Alone)
describeBy (data= DROI_mPFC, mPFC_activation.plus_minus~Parent_Alone)
#multilevel linear regression- main analysis
lmer_mPFC_plus_minus<-lmer(data= DROI_mPFC, mPFC_activation.plus_minus~Parent_Alone_num_c+(1|Subject))
report(lmer_mPFC_plus_minus)
round(-1.40e-03,2)
round(-1.40e-03,3)
round(-1.64e-03,2)
round(-1.64e-03,3)
rm(list = ls())
cat ("\014")
if(is.null(dev.list()) == FALSE) dev.off()
#Packages
packages <- c('reshape','psych','rstatix','tidyverse', 'Rmisc', 'lme4','ggpubr','report','gridExtra')
lapply(packages, require, character.only = TRUE)
#load data
D <- read.csv("data/classical_conditioning_behavior_data.csv")
#create a data with only like+nervous rating rows
DBehav <- D[!is.na(D$LikePre.RESP)|!is.na(D$LikePost.RESP),]
#put the pre and post ratings under the same variable
DBehav$Like.RESP <- NA
DBehav$Like.RESP[!is.na(DBehav$LikePre.RESP)]  <- DBehav$LikePre.RESP[!is.na(DBehav$LikePre.RESP)]
DBehav$Like.RESP[!is.na(DBehav$LikePost.RESP)] <- DBehav$LikePost.RESP[!is.na(DBehav$LikePost.RESP)]
DBehav$Nervous.RESP <- NA
DBehav$Nervous.RESP[!is.na(DBehav$NervousPre.RESP)]  <- DBehav$NervousPre.RESP[!is.na(DBehav$NervousPre.RESP)]
DBehav$Nervous.RESP[!is.na(DBehav$NervousPost.RESP)] <- DBehav$NervousPost.RESP[!is.na(DBehav$NervousPost.RESP)]
#create a variable indicating the time (pre/post conditioning)
DBehav$time <- NA
DBehav$time[!is.na(DBehav$LikePre.RESP)]  <-"Pre"
DBehav$time[!is.na(DBehav$LikePost.RESP)] <-"Post"
#create a variable indicating the time, the version (for stimuli counterbalance) and the stimulus (CS+/CS-)
DBehav$version_time_and_stim <- paste0(DBehav$Version,"_",DBehav$time,"_",DBehav$Shape)
#take only relevant variables
DBehav <- DBehav[,c("Subject","DataFile.Basename","Like.RESP","Nervous.RESP","version_time_and_stim")]
#remove version V1_REG of subject 062  (a redundant, wrong file)
DBehav <- DBehav[!(DBehav$Subject==62 & DBehav$DataFile.Basename=="Class_cond_v1_REG-0062-1"),]
#turn to wide format
#ignore warning message (it refers to a subject who is about to be removed from the file anyway)
DBehav_Wide <- reshape(DBehav, timevar="version_time_and_stim",idvar="Subject", direction="wide")
#import condition data
DParentInfo <- read.csv("data/classical_conditioning_parental_presence_data.csv")
DBehav_Wide <- merge(DBehav_Wide,DParentInfo[,c("Subject","Version_Parent","Version_Alone","First_Cond")], by="Subject", all.x=T, all.y=F)
#import data
DDemographics <- read.csv("../data/ELFK_demographics.csv")
DBehav_Wide <- merge(DBehav_Wide,DDemographics[,c("Subject","SEX","MRI_AGE","DEM_4_RACE_CHILD","DEM_4_RACE_CHILD_OTHER")], by="Subject", all.x=T, all.y=F)
#check age, sex and race of the sample
#age
describe(DBehav_Wide$MRI_AGE)
#sex
summary(as.factor(DBehav_Wide$SEX))
#race
summary(as.factor(DBehav_Wide$DEM_4_RACE_CHILD))
#remove subjects 76 and 80 (experimenter error- watched the same shapes in both parental presence and absence conditions)
#remove subjects 24 and 88 (did not complete both conditions)
DBehav <- DBehav[DBehav$Subject!=76 & DBehav$Subject!=80 & DBehav$Subject!=24 & DBehav$Subject!=88,]
DBehav_Wide <- DBehav_Wide[DBehav_Wide$Subject!=76 & DBehav_Wide$Subject!=80 & DBehav_Wide$Subject!=24 & DBehav_Wide$Subject!=88,]
#remove nervous rating data of subject 56 from v2- the parental absence condition (was not asked this question in the parent presence condition due to experimenter error)
DBehav$Nervous.RESP[DBehav$Subject==56] <- NA
DBehav_Wide$Nervous.RESP.v2_Pre_CSPlus[DBehav_Wide$Subject==56] <- NA
DBehav_Wide$Nervous.RESP.v2_Post_CSPlus[DBehav_Wide$Subject==56] <- NA
DBehav_Wide$Nervous.RESP.v2_Pre_CSMinus[DBehav_Wide$Subject==56] <- NA
DBehav_Wide$Nervous.RESP.v2_Post_CSMinus[DBehav_Wide$Subject==56] <- NA
#check age, sex and race for the final behavioral sample
#age
describe(DBehav_Wide$MRI_AGE)
#sex
summary(as.factor(DBehav_Wide$SEX))
#race
summary(as.factor(DBehav_Wide$DEM_4_RACE_CHILD))
#like question
#initialize variables
DBehav_Wide$ParentPre_CSPlus <- NA
DBehav_Wide$ParentPre_CSMinus <- NA
DBehav_Wide$AlonePre_CSPlus <- NA
DBehav_Wide$AlonePre_CSMinus <- NA
DBehav_Wide$ParentPost_CSPlus <- NA
DBehav_Wide$ParentPost_CSMinus <- NA
DBehav_Wide$AlonePost_CSPlus <- NA
DBehav_Wide$AlonePost_CSMinus <- NA
DBehav_Wide$ParentPre_CSPlus[DBehav_Wide$Version_Parent=="V1"]   <-DBehav_Wide$Like.RESP.v1_Pre_CSPlus[DBehav_Wide$Version_Parent=="V1"]
DBehav_Wide$ParentPre_CSPlus[DBehav_Wide$Version_Parent=="V2"]   <-DBehav_Wide$Like.RESP.v2_Pre_CSPlus[DBehav_Wide$Version_Parent=="V2"]
DBehav_Wide$ParentPre_CSMinus[DBehav_Wide$Version_Parent=="V1"]  <-DBehav_Wide$Like.RESP.v1_Pre_CSMinus[DBehav_Wide$Version_Parent=="V1"]
DBehav_Wide$ParentPre_CSMinus[DBehav_Wide$Version_Parent=="V2"]  <-DBehav_Wide$Like.RESP.v2_Pre_CSMinus[DBehav_Wide$Version_Parent=="V2"]
DBehav_Wide$ParentPost_CSPlus[DBehav_Wide$Version_Parent=="V1"]  <-DBehav_Wide$Like.RESP.v1_Post_CSPlus[DBehav_Wide$Version_Parent=="V1"]
DBehav_Wide$ParentPost_CSPlus[DBehav_Wide$Version_Parent=="V2"]  <-DBehav_Wide$Like.RESP.v2_Post_CSPlus[DBehav_Wide$Version_Parent=="V2"]
DBehav_Wide$ParentPost_CSMinus[DBehav_Wide$Version_Parent=="V1"] <-DBehav_Wide$Like.RESP.v1_Post_CSMinus[DBehav_Wide$Version_Parent=="V1"]
DBehav_Wide$ParentPost_CSMinus[DBehav_Wide$Version_Parent=="V2"] <-DBehav_Wide$Like.RESP.v2_Post_CSMinus[DBehav_Wide$Version_Parent=="V2"]
DBehav_Wide$AlonePre_CSPlus[DBehav_Wide$Version_Alone=="V1"]   <-DBehav_Wide$Like.RESP.v1_Pre_CSPlus[DBehav_Wide$Version_Alone=="V1"]
DBehav_Wide$AlonePre_CSPlus[DBehav_Wide$Version_Alone=="V2"]   <-DBehav_Wide$Like.RESP.v2_Pre_CSPlus[DBehav_Wide$Version_Alone=="V2"]
DBehav_Wide$AlonePre_CSMinus[DBehav_Wide$Version_Alone=="V1"]  <-DBehav_Wide$Like.RESP.v1_Pre_CSMinus[DBehav_Wide$Version_Alone=="V1"]
DBehav_Wide$AlonePre_CSMinus[DBehav_Wide$Version_Alone=="V2"]  <-DBehav_Wide$Like.RESP.v2_Pre_CSMinus[DBehav_Wide$Version_Alone=="V2"]
DBehav_Wide$AlonePost_CSPlus[DBehav_Wide$Version_Alone=="V1"]  <-DBehav_Wide$Like.RESP.v1_Post_CSPlus[DBehav_Wide$Version_Alone=="V1"]
DBehav_Wide$AlonePost_CSPlus[DBehav_Wide$Version_Alone=="V2"]  <-DBehav_Wide$Like.RESP.v2_Post_CSPlus[DBehav_Wide$Version_Alone=="V2"]
DBehav_Wide$AlonePost_CSMinus[DBehav_Wide$Version_Alone=="V1"] <-DBehav_Wide$Like.RESP.v1_Post_CSMinus[DBehav_Wide$Version_Alone=="V1"]
DBehav_Wide$AlonePost_CSMinus[DBehav_Wide$Version_Alone=="V2"] <-DBehav_Wide$Like.RESP.v2_Post_CSMinus[DBehav_Wide$Version_Alone=="V2"]
#nervous question
DBehav_Wide$ParentPre_CSPlus.ner <- NA
DBehav_Wide$ParentPre_CSMinus.ner <- NA
DBehav_Wide$AlonePre_CSPlus.ner <- NA
DBehav_Wide$AlonePre_CSMinus.ner <- NA
DBehav_Wide$ParentPost_CSPlus.ner <- NA
DBehav_Wide$ParentPost_CSMinus.ner <- NA
DBehav_Wide$AlonePost_CSPlus.ner <- NA
DBehav_Wide$AlonePost_CSMinus.ner <- NA
DBehav_Wide$ParentPre_CSPlus.ner[DBehav_Wide$Version_Parent=="V1"]   <-DBehav_Wide$Nervous.RESP.v1_Pre_CSPlus[DBehav_Wide$Version_Parent=="V1"]
DBehav_Wide$ParentPre_CSPlus.ner[DBehav_Wide$Version_Parent=="V2"]   <-DBehav_Wide$Nervous.RESP.v2_Pre_CSPlus[DBehav_Wide$Version_Parent=="V2"]
DBehav_Wide$ParentPre_CSMinus.ner[DBehav_Wide$Version_Parent=="V1"]  <-DBehav_Wide$Nervous.RESP.v1_Pre_CSMinus[DBehav_Wide$Version_Parent=="V1"]
DBehav_Wide$ParentPre_CSMinus.ner[DBehav_Wide$Version_Parent=="V2"]  <-DBehav_Wide$Nervous.RESP.v2_Pre_CSMinus[DBehav_Wide$Version_Parent=="V2"]
DBehav_Wide$ParentPost_CSPlus.ner[DBehav_Wide$Version_Parent=="V1"]  <-DBehav_Wide$Nervous.RESP.v1_Post_CSPlus[DBehav_Wide$Version_Parent=="V1"]
DBehav_Wide$ParentPost_CSPlus.ner[DBehav_Wide$Version_Parent=="V2"]  <-DBehav_Wide$Nervous.RESP.v2_Post_CSPlus[DBehav_Wide$Version_Parent=="V2"]
DBehav_Wide$ParentPost_CSMinus.ner[DBehav_Wide$Version_Parent=="V1"] <-DBehav_Wide$Nervous.RESP.v1_Post_CSMinus[DBehav_Wide$Version_Parent=="V1"]
DBehav_Wide$ParentPost_CSMinus.ner[DBehav_Wide$Version_Parent=="V2"] <-DBehav_Wide$Nervous.RESP.v2_Post_CSMinus[DBehav_Wide$Version_Parent=="V2"]
DBehav_Wide$AlonePre_CSPlus.ner[DBehav_Wide$Version_Alone=="V1"]   <-DBehav_Wide$Nervous.RESP.v1_Pre_CSPlus[DBehav_Wide$Version_Alone=="V1"]
DBehav_Wide$AlonePre_CSPlus.ner[DBehav_Wide$Version_Alone=="V2"]   <-DBehav_Wide$Nervous.RESP.v2_Pre_CSPlus[DBehav_Wide$Version_Alone=="V2"]
DBehav_Wide$AlonePre_CSMinus.ner[DBehav_Wide$Version_Alone=="V1"]  <-DBehav_Wide$Nervous.RESP.v1_Pre_CSMinus[DBehav_Wide$Version_Alone=="V1"]
DBehav_Wide$AlonePre_CSMinus.ner[DBehav_Wide$Version_Alone=="V2"]  <-DBehav_Wide$Nervous.RESP.v2_Pre_CSMinus[DBehav_Wide$Version_Alone=="V2"]
DBehav_Wide$AlonePost_CSPlus.ner[DBehav_Wide$Version_Alone=="V1"]  <-DBehav_Wide$Nervous.RESP.v1_Post_CSPlus[DBehav_Wide$Version_Alone=="V1"]
DBehav_Wide$AlonePost_CSPlus.ner[DBehav_Wide$Version_Alone=="V2"]  <-DBehav_Wide$Nervous.RESP.v2_Post_CSPlus[DBehav_Wide$Version_Alone=="V2"]
DBehav_Wide$AlonePost_CSMinus.ner[DBehav_Wide$Version_Alone=="V1"] <-DBehav_Wide$Nervous.RESP.v1_Post_CSMinus[DBehav_Wide$Version_Alone=="V1"]
DBehav_Wide$AlonePost_CSMinus.ner[DBehav_Wide$Version_Alone=="V2"] <-DBehav_Wide$Nervous.RESP.v2_Post_CSMinus[DBehav_Wide$Version_Alone=="V2"]
#like question
DBehav_Wide$Parent_Pre_PlusMinMinus <- DBehav_Wide$ParentPre_CSPlus- DBehav_Wide$ParentPre_CSMinus
DBehav_Wide$Alone_Pre_PlusMinMinus <- DBehav_Wide$AlonePre_CSPlus- DBehav_Wide$AlonePre_CSMinus
DBehav_Wide$Parent_Post_PlusMinMinus <- DBehav_Wide$ParentPost_CSPlus- DBehav_Wide$ParentPost_CSMinus
DBehav_Wide$Alone_Post_PlusMinMinus <- DBehav_Wide$AlonePost_CSPlus- DBehav_Wide$AlonePost_CSMinus
#nervous question
DBehav_Wide$Parent_Pre_PlusMinMinus.ner <- DBehav_Wide$ParentPre_CSPlus.ner- DBehav_Wide$ParentPre_CSMinus.ner
DBehav_Wide$Alone_Pre_PlusMinMinus.ner <- DBehav_Wide$AlonePre_CSPlus.ner- DBehav_Wide$AlonePre_CSMinus.ner
DBehav_Wide$Parent_Post_PlusMinMinus.ner <- DBehav_Wide$ParentPost_CSPlus.ner- DBehav_Wide$ParentPost_CSMinus.ner
DBehav_Wide$Alone_Post_PlusMinMinus.ner <- DBehav_Wide$AlonePost_CSPlus.ner- DBehav_Wide$AlonePost_CSMinus.ner
#like question
describe(DBehav_Wide[,c("ParentPre_CSMinus","ParentPost_CSMinus","ParentPre_CSPlus","ParentPost_CSPlus",
"AlonePre_CSMinus","AlonePost_CSMinus","AlonePre_CSPlus","AlonePost_CSPlus")])
#nervous question
describe (DBehav_Wide[,c("ParentPre_CSMinus.ner","ParentPost_CSMinus.ner","ParentPre_CSPlus.ner","ParentPost_CSPlus.ner",
"AlonePre_CSMinus.ner","AlonePost_CSMinus.ner","AlonePre_CSPlus.ner","AlonePost_CSPlus.ner")])
#difference score-like question
describe(DBehav_Wide[,c("Parent_Pre_PlusMinMinus","Parent_Post_PlusMinMinus",
"Alone_Pre_PlusMinMinus","Alone_Post_PlusMinMinus")])
#difference score-nervous question
describe(DBehav_Wide[,c("Parent_Pre_PlusMinMinus.ner","Parent_Post_PlusMinMinus.ner",
"Alone_Pre_PlusMinMinus.ner","Alone_Post_PlusMinMinus.ner")])
DBehav_Longdif <- DBehav_Wide[,c("Subject",
"Parent_Pre_PlusMinMinus","Parent_Post_PlusMinMinus",
"Alone_Pre_PlusMinMinus","Alone_Post_PlusMinMinus",
"Parent_Pre_PlusMinMinus.ner","Parent_Post_PlusMinMinus.ner",
"Alone_Pre_PlusMinMinus.ner","Alone_Post_PlusMinMinus.ner")]
#change vars names
colnames(DBehav_Longdif) <- gsub("_PlusMinMinus","",colnames(DBehav_Longdif))
colnames(DBehav_Longdif) <- gsub("_","",colnames(DBehav_Longdif))
col <- colnames(DBehav_Longdif)
colnames(DBehav_Longdif)[c(which(col=="ParentPre.ner"),which(col=="ParentPost.ner"),which(col=="AlonePre.ner"),which(col=="AlonePost.ner"))] <-
c("NervousRESP_ParentPre","NervousRESP_ParentPost","NervousRESP_AlonePre","NervousRESP_AlonePost")
colnames(DBehav_Longdif)[c(which(col=="ParentPre"),which(col=="ParentPost"), which(col=="AlonePre"),which(col=="AlonePost"))] <-
c("LikeRESP_ParentPre","LikeRESP_ParentPost","LikeRESP_AlonePre","LikeRESP_AlonePost")
#turn to long format
DBehav_Longdif <- reshape(DBehav_Longdif,idvar="Subject", timevar = "versiontime",
varying=colnames(DBehav_Longdif)[2:9],direction="long", sep="_")
#create parental presence condition and time variables
DBehav_Longdif$version <-NA
DBehav_Longdif$version[DBehav_Longdif$versiontime=="ParentPre"|DBehav_Longdif$versiontime=="ParentPost"] <- "Parent"
DBehav_Longdif$version[DBehav_Longdif$versiontime=="AlonePre"|DBehav_Longdif$versiontime=="AlonePost"] <- "Alone"
DBehav_Longdif$time <-NA
DBehav_Longdif$time[DBehav_Longdif$versiontime=="ParentPre"| DBehav_Longdif$versiontime=="AlonePre"] <- "1Pre"
DBehav_Longdif$time[DBehav_Longdif$versiontime=="ParentPost"| DBehav_Longdif$versiontime=="AlonePost"] <- "2Post"
#verify that means and sd stay the same after reshaping
describeBy(data=DBehav_Longdif, LikeRESP ~ time+version)
describeBy(data=DBehav_Longdif, NervousRESP ~ time+version)
#all good
#add sex and age information
DBehav_Longdif <- merge(DBehav_Longdif,DBehav_Wide[,c("Subject","SEX","MRI_AGE")],
by="Subject", all.x=T, all.y=F)
#center independent variables
DBehav_Longdif <- DBehav_Longdif %>%
dplyr::mutate(SEX_num = ifelse(SEX=="m",0,1),
SEX_num_c = scale(SEX_num,scale=F),
version_num = ifelse(version=="Alone",0,1),
version_num_c = scale(version_num,scale=F),
time_num = ifelse(time=="1Pre",0,1),
time_num_c = scale(time_num,scale=F),
MRI_AGE_c = scale(MRI_AGE, scale=F))
#multilevel linear regression controlling for age and sex
model_like_control_age_sex <-lmer(data= DBehav_Longdif, LikeRESP~ version_num_c*time_num_c + SEX_num_c+MRI_AGE_c + (1|Subject))
report(model_like_control_age_sex)
8.19e-03
summary(model_like_control_age_sex)
48*4
#multilevel linear regression
model_nervous <-lmer(data= DBehav_Longdif, NervousRESP~version_num_c*time_num_c+(1|Subject))
report(model_nervous)
#multilevel linear regression controlling for age and sex
model_nervous_control_sex_age <-lmer(data= DBehav_Longdif, NervousRESP~
version_num_c*time_num_c +
SEX_num_c+MRI_AGE_c+ (1|Subject))
report(model_nervous_control_sex_age)
-8.94e-03
4.12e-03
9.00e-03
summary(model_nervous_control_sex_age)
model_like_parent <-lmer(data= DBehav_Longdif[DBehav_Longdif$version=="parent"], LikeRESP~time_num_c+(1|Subject))
model_like_parent <-lmer(data= DBehav_Longdif[DBehav_Longdif$version=="parent",], LikeRESP~time_num_c+(1|Subject))
View(DBehav_Longdif)
model_like_parent <-lmer(data= DBehav_Longdif[DBehav_Longdif$version=="Parent",], LikeRESP~time_num_c+(1|Subject))
report(model_like_parent)
model_like_parent <-lmer(data= DBehav_Longdif[DBehav_Longdif$version=="Alone",], LikeRESP~time_num_c+(1|Subject))
report(model_like_parent)
try <- DBehav_Longdif[DBehav_Longdif$version=="Alone",]
View(try)
#although the interaction is not significant, explore the pattern separately for each parental context version
model_like_control_age_sex_parent <-lmer(data= DBehav_Longdif[DBehav_Longdif$version=="Parent"], LikeRESP~ time_num_c + SEX_num_c+MRI_AGE_c + (1|Subject))
#although the interaction is not significant, explore the pattern separately for each parental context version
model_like_control_age_sex_parent <-lmer(data= DBehav_Longdif[DBehav_Longdif$version=="Parent",], LikeRESP~ time_num_c + SEX_num_c+MRI_AGE_c + (1|Subject))
report(model_like_control_age_sex_parent)
model_like_control_age_sex_alone <-lmer(data= DBehav_Longdif[DBehav_Longdif$version=="Alone",], LikeRESP~ time_num_c + SEX_num_c+MRI_AGE_c + (1|Subject))
report(model_like_control_age_sex_alone)
report(model_like_control_age_sex_parent)
report(model_like_control_age_sex_alone)
#although the interaction is not significant, explore the pattern separately for each parental context version
model_like_control_age_sex_parent <-lmer(data= DBehav_Longdif[DBehav_Longdif$version=="Parent",], LikeRESP~ time_num_c + SEX_num_c+MRI_AGE_c + (1|Subject))
report(model_like_control_age_sex_parent)
model_like_control_age_sex_alone <-lmer(data= DBehav_Longdif[DBehav_Longdif$version=="Alone",], LikeRESP~ time_num_c + SEX_num_c+MRI_AGE_c + (1|Subject))
report(model_like_control_age_sex_alone)
rm(list = ls())
cat ("\014")
if(is.null(dev.list()) == FALSE) dev.off()
#Packages
packages <- c('reshape','psych','rstatix','tidyverse', 'Rmisc', 'lme4','ggpubr','report','gridExtra')
lapply(packages, require, character.only = TRUE)
#load data
D <- read.csv("data/classical_conditioning_behavior_data.csv")
#create a data with only like+nervous rating rows
DBehav <- D[!is.na(D$LikePre.RESP)|!is.na(D$LikePost.RESP),]
#put the pre and post ratings under the same variable
DBehav$Like.RESP <- NA
DBehav$Like.RESP[!is.na(DBehav$LikePre.RESP)]  <- DBehav$LikePre.RESP[!is.na(DBehav$LikePre.RESP)]
DBehav$Like.RESP[!is.na(DBehav$LikePost.RESP)] <- DBehav$LikePost.RESP[!is.na(DBehav$LikePost.RESP)]
DBehav$Nervous.RESP <- NA
DBehav$Nervous.RESP[!is.na(DBehav$NervousPre.RESP)]  <- DBehav$NervousPre.RESP[!is.na(DBehav$NervousPre.RESP)]
DBehav$Nervous.RESP[!is.na(DBehav$NervousPost.RESP)] <- DBehav$NervousPost.RESP[!is.na(DBehav$NervousPost.RESP)]
#create a variable indicating the time (pre/post conditioning)
DBehav$time <- NA
DBehav$time[!is.na(DBehav$LikePre.RESP)]  <-"Pre"
DBehav$time[!is.na(DBehav$LikePost.RESP)] <-"Post"
#create a variable indicating the time, the version (for stimuli counterbalance) and the stimulus (CS+/CS-)
DBehav$version_time_and_stim <- paste0(DBehav$Version,"_",DBehav$time,"_",DBehav$Shape)
#take only relevant variables
DBehav <- DBehav[,c("Subject","DataFile.Basename","Like.RESP","Nervous.RESP","version_time_and_stim")]
#remove version V1_REG of subject 062  (a redundant, wrong file)
DBehav <- DBehav[!(DBehav$Subject==62 & DBehav$DataFile.Basename=="Class_cond_v1_REG-0062-1"),]
#turn to wide format
#ignore warning message (it refers to a subject who is about to be removed from the file anyway)
DBehav_Wide <- reshape(DBehav, timevar="version_time_and_stim",idvar="Subject", direction="wide")
#import condition data
DParentInfo <- read.csv("data/classical_conditioning_parental_presence_data.csv")
DBehav_Wide <- merge(DBehav_Wide,DParentInfo[,c("Subject","Version_Parent","Version_Alone","First_Cond")], by="Subject", all.x=T, all.y=F)
#import data
DDemographics <- read.csv("../data/ELFK_demographics.csv")
DBehav_Wide <- merge(DBehav_Wide,DDemographics[,c("Subject","SEX","MRI_AGE","DEM_4_RACE_CHILD","DEM_4_RACE_CHILD_OTHER")], by="Subject", all.x=T, all.y=F)
#check age, sex and race of the sample
#age
describe(DBehav_Wide$MRI_AGE)
#sex
summary(as.factor(DBehav_Wide$SEX))
#race
summary(as.factor(DBehav_Wide$DEM_4_RACE_CHILD))
#remove subjects 76 and 80 (experimenter error- watched the same shapes in both parental presence and absence conditions)
#remove subjects 24 and 88 (did not complete both conditions)
DBehav <- DBehav[DBehav$Subject!=76 & DBehav$Subject!=80 & DBehav$Subject!=24 & DBehav$Subject!=88,]
DBehav_Wide <- DBehav_Wide[DBehav_Wide$Subject!=76 & DBehav_Wide$Subject!=80 & DBehav_Wide$Subject!=24 & DBehav_Wide$Subject!=88,]
#remove nervous rating data of subject 56 from v2- the parental absence condition (was not asked this question in the parent presence condition due to experimenter error)
DBehav$Nervous.RESP[DBehav$Subject==56] <- NA
DBehav_Wide$Nervous.RESP.v2_Pre_CSPlus[DBehav_Wide$Subject==56] <- NA
DBehav_Wide$Nervous.RESP.v2_Post_CSPlus[DBehav_Wide$Subject==56] <- NA
DBehav_Wide$Nervous.RESP.v2_Pre_CSMinus[DBehav_Wide$Subject==56] <- NA
DBehav_Wide$Nervous.RESP.v2_Post_CSMinus[DBehav_Wide$Subject==56] <- NA
#check age, sex and race for the final behavioral sample
#age
describe(DBehav_Wide$MRI_AGE)
#sex
summary(as.factor(DBehav_Wide$SEX))
#race
summary(as.factor(DBehav_Wide$DEM_4_RACE_CHILD))
#like question
#initialize variables
DBehav_Wide$ParentPre_CSPlus <- NA
DBehav_Wide$ParentPre_CSMinus <- NA
DBehav_Wide$AlonePre_CSPlus <- NA
DBehav_Wide$AlonePre_CSMinus <- NA
DBehav_Wide$ParentPost_CSPlus <- NA
DBehav_Wide$ParentPost_CSMinus <- NA
DBehav_Wide$AlonePost_CSPlus <- NA
DBehav_Wide$AlonePost_CSMinus <- NA
DBehav_Wide$ParentPre_CSPlus[DBehav_Wide$Version_Parent=="V1"]   <-DBehav_Wide$Like.RESP.v1_Pre_CSPlus[DBehav_Wide$Version_Parent=="V1"]
DBehav_Wide$ParentPre_CSPlus[DBehav_Wide$Version_Parent=="V2"]   <-DBehav_Wide$Like.RESP.v2_Pre_CSPlus[DBehav_Wide$Version_Parent=="V2"]
DBehav_Wide$ParentPre_CSMinus[DBehav_Wide$Version_Parent=="V1"]  <-DBehav_Wide$Like.RESP.v1_Pre_CSMinus[DBehav_Wide$Version_Parent=="V1"]
DBehav_Wide$ParentPre_CSMinus[DBehav_Wide$Version_Parent=="V2"]  <-DBehav_Wide$Like.RESP.v2_Pre_CSMinus[DBehav_Wide$Version_Parent=="V2"]
DBehav_Wide$ParentPost_CSPlus[DBehav_Wide$Version_Parent=="V1"]  <-DBehav_Wide$Like.RESP.v1_Post_CSPlus[DBehav_Wide$Version_Parent=="V1"]
DBehav_Wide$ParentPost_CSPlus[DBehav_Wide$Version_Parent=="V2"]  <-DBehav_Wide$Like.RESP.v2_Post_CSPlus[DBehav_Wide$Version_Parent=="V2"]
DBehav_Wide$ParentPost_CSMinus[DBehav_Wide$Version_Parent=="V1"] <-DBehav_Wide$Like.RESP.v1_Post_CSMinus[DBehav_Wide$Version_Parent=="V1"]
DBehav_Wide$ParentPost_CSMinus[DBehav_Wide$Version_Parent=="V2"] <-DBehav_Wide$Like.RESP.v2_Post_CSMinus[DBehav_Wide$Version_Parent=="V2"]
DBehav_Wide$AlonePre_CSPlus[DBehav_Wide$Version_Alone=="V1"]   <-DBehav_Wide$Like.RESP.v1_Pre_CSPlus[DBehav_Wide$Version_Alone=="V1"]
DBehav_Wide$AlonePre_CSPlus[DBehav_Wide$Version_Alone=="V2"]   <-DBehav_Wide$Like.RESP.v2_Pre_CSPlus[DBehav_Wide$Version_Alone=="V2"]
DBehav_Wide$AlonePre_CSMinus[DBehav_Wide$Version_Alone=="V1"]  <-DBehav_Wide$Like.RESP.v1_Pre_CSMinus[DBehav_Wide$Version_Alone=="V1"]
DBehav_Wide$AlonePre_CSMinus[DBehav_Wide$Version_Alone=="V2"]  <-DBehav_Wide$Like.RESP.v2_Pre_CSMinus[DBehav_Wide$Version_Alone=="V2"]
DBehav_Wide$AlonePost_CSPlus[DBehav_Wide$Version_Alone=="V1"]  <-DBehav_Wide$Like.RESP.v1_Post_CSPlus[DBehav_Wide$Version_Alone=="V1"]
DBehav_Wide$AlonePost_CSPlus[DBehav_Wide$Version_Alone=="V2"]  <-DBehav_Wide$Like.RESP.v2_Post_CSPlus[DBehav_Wide$Version_Alone=="V2"]
DBehav_Wide$AlonePost_CSMinus[DBehav_Wide$Version_Alone=="V1"] <-DBehav_Wide$Like.RESP.v1_Post_CSMinus[DBehav_Wide$Version_Alone=="V1"]
DBehav_Wide$AlonePost_CSMinus[DBehav_Wide$Version_Alone=="V2"] <-DBehav_Wide$Like.RESP.v2_Post_CSMinus[DBehav_Wide$Version_Alone=="V2"]
#nervous question
DBehav_Wide$ParentPre_CSPlus.ner <- NA
DBehav_Wide$ParentPre_CSMinus.ner <- NA
DBehav_Wide$AlonePre_CSPlus.ner <- NA
DBehav_Wide$AlonePre_CSMinus.ner <- NA
DBehav_Wide$ParentPost_CSPlus.ner <- NA
DBehav_Wide$ParentPost_CSMinus.ner <- NA
DBehav_Wide$AlonePost_CSPlus.ner <- NA
DBehav_Wide$AlonePost_CSMinus.ner <- NA
DBehav_Wide$ParentPre_CSPlus.ner[DBehav_Wide$Version_Parent=="V1"]   <-DBehav_Wide$Nervous.RESP.v1_Pre_CSPlus[DBehav_Wide$Version_Parent=="V1"]
DBehav_Wide$ParentPre_CSPlus.ner[DBehav_Wide$Version_Parent=="V2"]   <-DBehav_Wide$Nervous.RESP.v2_Pre_CSPlus[DBehav_Wide$Version_Parent=="V2"]
DBehav_Wide$ParentPre_CSMinus.ner[DBehav_Wide$Version_Parent=="V1"]  <-DBehav_Wide$Nervous.RESP.v1_Pre_CSMinus[DBehav_Wide$Version_Parent=="V1"]
DBehav_Wide$ParentPre_CSMinus.ner[DBehav_Wide$Version_Parent=="V2"]  <-DBehav_Wide$Nervous.RESP.v2_Pre_CSMinus[DBehav_Wide$Version_Parent=="V2"]
DBehav_Wide$ParentPost_CSPlus.ner[DBehav_Wide$Version_Parent=="V1"]  <-DBehav_Wide$Nervous.RESP.v1_Post_CSPlus[DBehav_Wide$Version_Parent=="V1"]
DBehav_Wide$ParentPost_CSPlus.ner[DBehav_Wide$Version_Parent=="V2"]  <-DBehav_Wide$Nervous.RESP.v2_Post_CSPlus[DBehav_Wide$Version_Parent=="V2"]
DBehav_Wide$ParentPost_CSMinus.ner[DBehav_Wide$Version_Parent=="V1"] <-DBehav_Wide$Nervous.RESP.v1_Post_CSMinus[DBehav_Wide$Version_Parent=="V1"]
DBehav_Wide$ParentPost_CSMinus.ner[DBehav_Wide$Version_Parent=="V2"] <-DBehav_Wide$Nervous.RESP.v2_Post_CSMinus[DBehav_Wide$Version_Parent=="V2"]
DBehav_Wide$AlonePre_CSPlus.ner[DBehav_Wide$Version_Alone=="V1"]   <-DBehav_Wide$Nervous.RESP.v1_Pre_CSPlus[DBehav_Wide$Version_Alone=="V1"]
DBehav_Wide$AlonePre_CSPlus.ner[DBehav_Wide$Version_Alone=="V2"]   <-DBehav_Wide$Nervous.RESP.v2_Pre_CSPlus[DBehav_Wide$Version_Alone=="V2"]
DBehav_Wide$AlonePre_CSMinus.ner[DBehav_Wide$Version_Alone=="V1"]  <-DBehav_Wide$Nervous.RESP.v1_Pre_CSMinus[DBehav_Wide$Version_Alone=="V1"]
DBehav_Wide$AlonePre_CSMinus.ner[DBehav_Wide$Version_Alone=="V2"]  <-DBehav_Wide$Nervous.RESP.v2_Pre_CSMinus[DBehav_Wide$Version_Alone=="V2"]
DBehav_Wide$AlonePost_CSPlus.ner[DBehav_Wide$Version_Alone=="V1"]  <-DBehav_Wide$Nervous.RESP.v1_Post_CSPlus[DBehav_Wide$Version_Alone=="V1"]
DBehav_Wide$AlonePost_CSPlus.ner[DBehav_Wide$Version_Alone=="V2"]  <-DBehav_Wide$Nervous.RESP.v2_Post_CSPlus[DBehav_Wide$Version_Alone=="V2"]
DBehav_Wide$AlonePost_CSMinus.ner[DBehav_Wide$Version_Alone=="V1"] <-DBehav_Wide$Nervous.RESP.v1_Post_CSMinus[DBehav_Wide$Version_Alone=="V1"]
DBehav_Wide$AlonePost_CSMinus.ner[DBehav_Wide$Version_Alone=="V2"] <-DBehav_Wide$Nervous.RESP.v2_Post_CSMinus[DBehav_Wide$Version_Alone=="V2"]
#like question
DBehav_Wide$Parent_Pre_PlusMinMinus <- DBehav_Wide$ParentPre_CSPlus- DBehav_Wide$ParentPre_CSMinus
DBehav_Wide$Alone_Pre_PlusMinMinus <- DBehav_Wide$AlonePre_CSPlus- DBehav_Wide$AlonePre_CSMinus
DBehav_Wide$Parent_Post_PlusMinMinus <- DBehav_Wide$ParentPost_CSPlus- DBehav_Wide$ParentPost_CSMinus
DBehav_Wide$Alone_Post_PlusMinMinus <- DBehav_Wide$AlonePost_CSPlus- DBehav_Wide$AlonePost_CSMinus
#nervous question
DBehav_Wide$Parent_Pre_PlusMinMinus.ner <- DBehav_Wide$ParentPre_CSPlus.ner- DBehav_Wide$ParentPre_CSMinus.ner
DBehav_Wide$Alone_Pre_PlusMinMinus.ner <- DBehav_Wide$AlonePre_CSPlus.ner- DBehav_Wide$AlonePre_CSMinus.ner
DBehav_Wide$Parent_Post_PlusMinMinus.ner <- DBehav_Wide$ParentPost_CSPlus.ner- DBehav_Wide$ParentPost_CSMinus.ner
DBehav_Wide$Alone_Post_PlusMinMinus.ner <- DBehav_Wide$AlonePost_CSPlus.ner- DBehav_Wide$AlonePost_CSMinus.ner
#like question
describe(DBehav_Wide[,c("ParentPre_CSMinus","ParentPost_CSMinus","ParentPre_CSPlus","ParentPost_CSPlus",
"AlonePre_CSMinus","AlonePost_CSMinus","AlonePre_CSPlus","AlonePost_CSPlus")])
#nervous question
describe (DBehav_Wide[,c("ParentPre_CSMinus.ner","ParentPost_CSMinus.ner","ParentPre_CSPlus.ner","ParentPost_CSPlus.ner",
"AlonePre_CSMinus.ner","AlonePost_CSMinus.ner","AlonePre_CSPlus.ner","AlonePost_CSPlus.ner")])
#difference score-like question
describe(DBehav_Wide[,c("Parent_Pre_PlusMinMinus","Parent_Post_PlusMinMinus",
"Alone_Pre_PlusMinMinus","Alone_Post_PlusMinMinus")])
#difference score-nervous question
describe(DBehav_Wide[,c("Parent_Pre_PlusMinMinus.ner","Parent_Post_PlusMinMinus.ner",
"Alone_Pre_PlusMinMinus.ner","Alone_Post_PlusMinMinus.ner")])
DBehav_Longdif <- DBehav_Wide[,c("Subject",
"Parent_Pre_PlusMinMinus","Parent_Post_PlusMinMinus",
"Alone_Pre_PlusMinMinus","Alone_Post_PlusMinMinus",
"Parent_Pre_PlusMinMinus.ner","Parent_Post_PlusMinMinus.ner",
"Alone_Pre_PlusMinMinus.ner","Alone_Post_PlusMinMinus.ner")]
#change vars names
colnames(DBehav_Longdif) <- gsub("_PlusMinMinus","",colnames(DBehav_Longdif))
colnames(DBehav_Longdif) <- gsub("_","",colnames(DBehav_Longdif))
col <- colnames(DBehav_Longdif)
colnames(DBehav_Longdif)[c(which(col=="ParentPre.ner"),which(col=="ParentPost.ner"),which(col=="AlonePre.ner"),which(col=="AlonePost.ner"))] <-
c("NervousRESP_ParentPre","NervousRESP_ParentPost","NervousRESP_AlonePre","NervousRESP_AlonePost")
colnames(DBehav_Longdif)[c(which(col=="ParentPre"),which(col=="ParentPost"), which(col=="AlonePre"),which(col=="AlonePost"))] <-
c("LikeRESP_ParentPre","LikeRESP_ParentPost","LikeRESP_AlonePre","LikeRESP_AlonePost")
#turn to long format
DBehav_Longdif <- reshape(DBehav_Longdif,idvar="Subject", timevar = "versiontime",
varying=colnames(DBehav_Longdif)[2:9],direction="long", sep="_")
#create parental presence condition and time variables
DBehav_Longdif$version <-NA
DBehav_Longdif$version[DBehav_Longdif$versiontime=="ParentPre"|DBehav_Longdif$versiontime=="ParentPost"] <- "Parent"
DBehav_Longdif$version[DBehav_Longdif$versiontime=="AlonePre"|DBehav_Longdif$versiontime=="AlonePost"] <- "Alone"
DBehav_Longdif$time <-NA
DBehav_Longdif$time[DBehav_Longdif$versiontime=="ParentPre"| DBehav_Longdif$versiontime=="AlonePre"] <- "1Pre"
DBehav_Longdif$time[DBehav_Longdif$versiontime=="ParentPost"| DBehav_Longdif$versiontime=="AlonePost"] <- "2Post"
#verify that means and sd stay the same after reshaping
describeBy(data=DBehav_Longdif, LikeRESP ~ time+version)
describeBy(data=DBehav_Longdif, NervousRESP ~ time+version)
#all good
#add sex and age information
DBehav_Longdif <- merge(DBehav_Longdif,DBehav_Wide[,c("Subject","SEX","MRI_AGE")],
by="Subject", all.x=T, all.y=F)
#center independent variables
DBehav_Longdif <- DBehav_Longdif %>%
dplyr::mutate(SEX_num = ifelse(SEX=="m",0,1),
SEX_num_c = scale(SEX_num,scale=F),
version_num = ifelse(version=="Alone",0,1),
version_num_c = scale(version_num,scale=F),
time_num = ifelse(time=="1Pre",0,1),
time_num_c = scale(time_num,scale=F),
MRI_AGE_c = scale(MRI_AGE, scale=F))
#multilevel linear regression controlling for age and sex
model_like_control_age_sex <-lmer(data= DBehav_Longdif, LikeRESP~ version_num_c*time_num_c + SEX_num_c+MRI_AGE_c + (1|Subject))
report(model_like_control_age_sex)
#multilevel linear regression controlling for age and sex
model_nervous_control_sex_age <-lmer(data= DBehav_Longdif, NervousRESP~
version_num_c*time_num_c +
SEX_num_c+MRI_AGE_c+ (1|Subject))
report(model_nervous_control_sex_age)
R.version()
R.Version()
citation()
