DBehav_Wide$ParentPost_CSMinus[DBehav_Wide$Version_Parent=="V2"] <-DBehav_Wide$Like.RESP.v2_Post_CSMinus[DBehav_Wide$Version_Parent=="V2"]
DBehav_Wide$AlonePre_CSPlus[DBehav_Wide$Version_Alone=="V1"]   <-DBehav_Wide$Like.RESP.v1_Pre_CSPlus[DBehav_Wide$Version_Alone=="V1"]
DBehav_Wide$AlonePre_CSPlus[DBehav_Wide$Version_Alone=="V2"]   <-DBehav_Wide$Like.RESP.v2_Pre_CSPlus[DBehav_Wide$Version_Alone=="V2"]
DBehav_Wide$AlonePre_CSMinus[DBehav_Wide$Version_Alone=="V1"]  <-DBehav_Wide$Like.RESP.v1_Pre_CSMinus[DBehav_Wide$Version_Alone=="V1"]
DBehav_Wide$AlonePre_CSMinus[DBehav_Wide$Version_Alone=="V2"]  <-DBehav_Wide$Like.RESP.v2_Pre_CSMinus[DBehav_Wide$Version_Alone=="V2"]
DBehav_Wide$AlonePost_CSPlus[DBehav_Wide$Version_Alone=="V1"]  <-DBehav_Wide$Like.RESP.v1_Post_CSPlus[DBehav_Wide$Version_Alone=="V1"]
DBehav_Wide$AlonePost_CSPlus[DBehav_Wide$Version_Alone=="V2"]  <-DBehav_Wide$Like.RESP.v2_Post_CSPlus[DBehav_Wide$Version_Alone=="V2"]
DBehav_Wide$AlonePost_CSMinus[DBehav_Wide$Version_Alone=="V1"] <-DBehav_Wide$Like.RESP.v1_Post_CSMinus[DBehav_Wide$Version_Alone=="V1"]
DBehav_Wide$AlonePost_CSMinus[DBehav_Wide$Version_Alone=="V2"] <-DBehav_Wide$Like.RESP.v2_Post_CSMinus[DBehav_Wide$Version_Alone=="V2"]
#nervous question
DBehav_Wide$ParentPre_CSPlus.ner <- NA
DBehav_Wide$ParentPre_CSMinus.ner <- NA
DBehav_Wide$AlonePre_CSPlus.ner <- NA
DBehav_Wide$AlonePre_CSMinus.ner <- NA
DBehav_Wide$ParentPost_CSPlus.ner <- NA
DBehav_Wide$ParentPost_CSMinus.ner <- NA
DBehav_Wide$AlonePost_CSPlus.ner <- NA
DBehav_Wide$AlonePost_CSMinus.ner <- NA
DBehav_Wide$ParentPre_CSPlus.ner[DBehav_Wide$Version_Parent=="V1"]   <-DBehav_Wide$Nervous.RESP.v1_Pre_CSPlus[DBehav_Wide$Version_Parent=="V1"]
DBehav_Wide$ParentPre_CSPlus.ner[DBehav_Wide$Version_Parent=="V2"]   <-DBehav_Wide$Nervous.RESP.v2_Pre_CSPlus[DBehav_Wide$Version_Parent=="V2"]
DBehav_Wide$ParentPre_CSMinus.ner[DBehav_Wide$Version_Parent=="V1"]  <-DBehav_Wide$Nervous.RESP.v1_Pre_CSMinus[DBehav_Wide$Version_Parent=="V1"]
DBehav_Wide$ParentPre_CSMinus.ner[DBehav_Wide$Version_Parent=="V2"]  <-DBehav_Wide$Nervous.RESP.v2_Pre_CSMinus[DBehav_Wide$Version_Parent=="V2"]
DBehav_Wide$ParentPost_CSPlus.ner[DBehav_Wide$Version_Parent=="V1"]  <-DBehav_Wide$Nervous.RESP.v1_Post_CSPlus[DBehav_Wide$Version_Parent=="V1"]
DBehav_Wide$ParentPost_CSPlus.ner[DBehav_Wide$Version_Parent=="V2"]  <-DBehav_Wide$Nervous.RESP.v2_Post_CSPlus[DBehav_Wide$Version_Parent=="V2"]
DBehav_Wide$ParentPost_CSMinus.ner[DBehav_Wide$Version_Parent=="V1"] <-DBehav_Wide$Nervous.RESP.v1_Post_CSMinus[DBehav_Wide$Version_Parent=="V1"]
DBehav_Wide$ParentPost_CSMinus.ner[DBehav_Wide$Version_Parent=="V2"] <-DBehav_Wide$Nervous.RESP.v2_Post_CSMinus[DBehav_Wide$Version_Parent=="V2"]
DBehav_Wide$AlonePre_CSPlus.ner[DBehav_Wide$Version_Alone=="V1"]   <-DBehav_Wide$Nervous.RESP.v1_Pre_CSPlus[DBehav_Wide$Version_Alone=="V1"]
DBehav_Wide$AlonePre_CSPlus.ner[DBehav_Wide$Version_Alone=="V2"]   <-DBehav_Wide$Nervous.RESP.v2_Pre_CSPlus[DBehav_Wide$Version_Alone=="V2"]
DBehav_Wide$AlonePre_CSMinus.ner[DBehav_Wide$Version_Alone=="V1"]  <-DBehav_Wide$Nervous.RESP.v1_Pre_CSMinus[DBehav_Wide$Version_Alone=="V1"]
DBehav_Wide$AlonePre_CSMinus.ner[DBehav_Wide$Version_Alone=="V2"]  <-DBehav_Wide$Nervous.RESP.v2_Pre_CSMinus[DBehav_Wide$Version_Alone=="V2"]
DBehav_Wide$AlonePost_CSPlus.ner[DBehav_Wide$Version_Alone=="V1"]  <-DBehav_Wide$Nervous.RESP.v1_Post_CSPlus[DBehav_Wide$Version_Alone=="V1"]
DBehav_Wide$AlonePost_CSPlus.ner[DBehav_Wide$Version_Alone=="V2"]  <-DBehav_Wide$Nervous.RESP.v2_Post_CSPlus[DBehav_Wide$Version_Alone=="V2"]
DBehav_Wide$AlonePost_CSMinus.ner[DBehav_Wide$Version_Alone=="V1"] <-DBehav_Wide$Nervous.RESP.v1_Post_CSMinus[DBehav_Wide$Version_Alone=="V1"]
DBehav_Wide$AlonePost_CSMinus.ner[DBehav_Wide$Version_Alone=="V2"] <-DBehav_Wide$Nervous.RESP.v2_Post_CSMinus[DBehav_Wide$Version_Alone=="V2"]
#first, create a variable for each run order (v1 and v2)
#like question
#a more positive score means that the CS+ was more liked than the CS-
DBehav_Wide$v1_Pre_PlusMinMinus  <- DBehav_Wide$Like.RESP.v1_Pre_CSPlus - DBehav_Wide$Like.RESP.v1_Pre_CSMinus
DBehav_Wide$v1_Post_PlusMinMinus <- DBehav_Wide$Like.RESP.v1_Post_CSPlus- DBehav_Wide$Like.RESP.v1_Post_CSMinus
DBehav_Wide$v2_Pre_PlusMinMinus  <- DBehav_Wide$Like.RESP.v2_Pre_CSPlus - DBehav_Wide$Like.RESP.v2_Pre_CSMinus
DBehav_Wide$v2_Post_PlusMinMinus <- DBehav_Wide$Like.RESP.v2_Post_CSPlus- DBehav_Wide$Like.RESP.v2_Post_CSMinus
#nervous question
#a more positive score means that the CS+ made participants more nervous than the CS-
DBehav_Wide$v1_Pre_PlusMinMinus.ner  <- DBehav_Wide$Nervous.RESP.v1_Pre_CSPlus - DBehav_Wide$Nervous.RESP.v1_Pre_CSMinus
DBehav_Wide$v1_Post_PlusMinMinus.ner <- DBehav_Wide$Nervous.RESP.v1_Post_CSPlus- DBehav_Wide$Nervous.RESP.v1_Post_CSMinus
DBehav_Wide$v2_Pre_PlusMinMinus.ner  <- DBehav_Wide$Nervous.RESP.v2_Pre_CSPlus - DBehav_Wide$Nervous.RESP.v2_Pre_CSMinus
DBehav_Wide$v2_Post_PlusMinMinus.ner <- DBehav_Wide$Nervous.RESP.v2_Post_CSPlus- DBehav_Wide$Nervous.RESP.v2_Post_CSMinus
#next, create difference score according to condition (parent vs. alone)
#Like question
DBehav_Wide$Parent_Pre_PlusMinMinus <- NA
DBehav_Wide$Alone_Pre_PlusMinMinus <- NA
DBehav_Wide$Parent_Post_PlusMinMinus <- NA
DBehav_Wide$Alone_Post_PlusMinMinus <- NA
DBehav_Wide$Parent_Pre_PlusMinMinus[DBehav_Wide$Version_Parent=="V1"] <-DBehav_Wide$v1_Pre_PlusMinMinus[DBehav_Wide$Version_Parent=="V1"]
DBehav_Wide$Parent_Pre_PlusMinMinus[DBehav_Wide$Version_Parent=="V2"] <-DBehav_Wide$v2_Pre_PlusMinMinus[DBehav_Wide$Version_Parent=="V2"]
DBehav_Wide$Alone_Pre_PlusMinMinus[DBehav_Wide$Version_Alone=="V1"] <-DBehav_Wide$v1_Pre_PlusMinMinus[DBehav_Wide$Version_Alone=="V1"]
DBehav_Wide$Alone_Pre_PlusMinMinus[DBehav_Wide$Version_Alone=="V2"] <-DBehav_Wide$v2_Pre_PlusMinMinus[DBehav_Wide$Version_Alone=="V2"]
DBehav_Wide$Parent_Post_PlusMinMinus[DBehav_Wide$Version_Parent=="V1"] <-DBehav_Wide$v1_Post_PlusMinMinus[DBehav_Wide$Version_Parent=="V1"]
DBehav_Wide$Parent_Post_PlusMinMinus[DBehav_Wide$Version_Parent=="V2"] <-DBehav_Wide$v2_Post_PlusMinMinus[DBehav_Wide$Version_Parent=="V2"]
DBehav_Wide$Alone_Post_PlusMinMinus[DBehav_Wide$Version_Alone=="V1"] <-DBehav_Wide$v1_Post_PlusMinMinus[DBehav_Wide$Version_Alone=="V1"]
DBehav_Wide$Alone_Post_PlusMinMinus[DBehav_Wide$Version_Alone=="V2"] <-DBehav_Wide$v2_Post_PlusMinMinus[DBehav_Wide$Version_Alone=="V2"]
#Nervous question
DBehav_Wide$Parent_Pre_PlusMinMinus.ner <- NA
DBehav_Wide$Alone_Pre_PlusMinMinus.ner <- NA
DBehav_Wide$Parent_Post_PlusMinMinus.ner <- NA
DBehav_Wide$Alone_Post_PlusMinMinus.ner <- NA
DBehav_Wide$Parent_Pre_PlusMinMinus.ner[DBehav_Wide$Version_Parent=="V1"] <-DBehav_Wide$v1_Pre_PlusMinMinus.ner[DBehav_Wide$Version_Parent=="V1"]
DBehav_Wide$Parent_Pre_PlusMinMinus.ner[DBehav_Wide$Version_Parent=="V2"] <-DBehav_Wide$v2_Pre_PlusMinMinus.ner[DBehav_Wide$Version_Parent=="V2"]
DBehav_Wide$Alone_Pre_PlusMinMinus.ner[DBehav_Wide$Version_Alone=="V1"] <-DBehav_Wide$v1_Pre_PlusMinMinus.ner[DBehav_Wide$Version_Alone=="V1"]
DBehav_Wide$Alone_Pre_PlusMinMinus.ner[DBehav_Wide$Version_Alone=="V2"] <-DBehav_Wide$v2_Pre_PlusMinMinus.ner[DBehav_Wide$Version_Alone=="V2"]
DBehav_Wide$Parent_Post_PlusMinMinus.ner[DBehav_Wide$Version_Parent=="V1"] <-DBehav_Wide$v1_Post_PlusMinMinus.ner[DBehav_Wide$Version_Parent=="V1"]
DBehav_Wide$Parent_Post_PlusMinMinus.ner[DBehav_Wide$Version_Parent=="V2"] <-DBehav_Wide$v2_Post_PlusMinMinus.ner[DBehav_Wide$Version_Parent=="V2"]
DBehav_Wide$Alone_Post_PlusMinMinus.ner[DBehav_Wide$Version_Alone=="V1"] <-DBehav_Wide$v1_Post_PlusMinMinus.ner[DBehav_Wide$Version_Alone=="V1"]
DBehav_Wide$Alone_Post_PlusMinMinus.ner[DBehav_Wide$Version_Alone=="V2"] <-DBehav_Wide$v2_Post_PlusMinMinus.ner[DBehav_Wide$Version_Alone=="V2"]
#like question
describe(DBehav_Wide[,c("ParentPre_CSMinus","ParentPost_CSMinus","ParentPre_CSPlus","ParentPost_CSPlus",
"AlonePre_CSMinus","AlonePost_CSMinus","AlonePre_CSPlus","AlonePost_CSPlus")])
#nervous question
describe (DBehav_Wide[,c("ParentPre_CSMinus.ner","ParentPost_CSMinus.ner","ParentPre_CSPlus.ner","ParentPost_CSPlus.ner",
"AlonePre_CSMinus.ner","AlonePost_CSMinus.ner","AlonePre_CSPlus.ner","AlonePost_CSPlus.ner")])
#difference score-like question
describe(DBehav_Wide[,c("Parent_Pre_PlusMinMinus","Parent_Post_PlusMinMinus",
"Alone_Pre_PlusMinMinus","Alone_Post_PlusMinMinus")])
#difference score-nervous question
describe(DBehav_Wide[,c("Parent_Pre_PlusMinMinus.ner","Parent_Post_PlusMinMinus.ner",
"Alone_Pre_PlusMinMinus.ner","Alone_Post_PlusMinMinus.ner")])
#relation with sex
t.test (data = DBehav_Wide, Parent_Pre_PlusMinMinus ~ SEX)
t.test (data = DBehav_Wide, Parent_Post_PlusMinMinus ~ SEX)
t.test (data = DBehav_Wide, Alone_Pre_PlusMinMinus ~ SEX)
t.test (data = DBehav_Wide, Alone_Post_PlusMinMinus ~ SEX)
t.test (data = DBehav_Wide, Parent_Pre_PlusMinMinus.ner ~ SEX)
t.test (data = DBehav_Wide, Parent_Post_PlusMinMinus.ner ~ SEX)
t.test (data = DBehav_Wide, Alone_Pre_PlusMinMinus.ner ~ SEX)
t.test (data = DBehav_Wide, Alone_Post_PlusMinMinus.ner ~ SEX)
#relation with age
cor.test (DBehav_Wide$Parent_Pre_PlusMinMinus, DBehav_Wide$MRI_AGE )
cor.test (DBehav_Wide$Parent_Post_PlusMinMinus, DBehav_Wide$MRI_AGE )
cor.test (DBehav_Wide$Alone_Pre_PlusMinMinus, DBehav_Wide$MRI_AGE )
cor.test (DBehav_Wide$Alone_Post_PlusMinMinus, DBehav_Wide$MRI_AGE )
cor.test (DBehav_Wide$Parent_Pre_PlusMinMinus.ner, DBehav_Wide$MRI_AGE )
cor.test (DBehav_Wide$Parent_Post_PlusMinMinus.ner, DBehav_Wide$MRI_AGE )
cor.test (DBehav_Wide$Alone_Pre_PlusMinMinus.ner, DBehav_Wide$MRI_AGE )
cor.test (DBehav_Wide$Alone_Post_PlusMinMinus.ner, DBehav_Wide$MRI_AGE )
DBehav_Longdif <- DBehav_Wide[,c("Subject",
"Parent_Pre_PlusMinMinus","Parent_Post_PlusMinMinus",
"Alone_Pre_PlusMinMinus","Alone_Post_PlusMinMinus",
"Parent_Pre_PlusMinMinus.ner","Parent_Post_PlusMinMinus.ner",
"Alone_Pre_PlusMinMinus.ner","Alone_Post_PlusMinMinus.ner")]
#change vars names
colnames(DBehav_Longdif) <- gsub("_PlusMinMinus","",colnames(DBehav_Longdif))
colnames(DBehav_Longdif) <- gsub("_","",colnames(DBehav_Longdif))
col <- colnames(DBehav_Longdif)
colnames(DBehav_Longdif)[c(which(col=="ParentPre.ner"),which(col=="ParentPost.ner"),which(col=="AlonePre.ner"),which(col=="AlonePost.ner"))] <-
c("NervousRESP_ParentPre","NervousRESP_ParentPost","NervousRESP_AlonePre","NervousRESP_AlonePost")
colnames(DBehav_Longdif)[c(which(col=="ParentPre"),which(col=="ParentPost"), which(col=="AlonePre"),which(col=="AlonePost"))] <-
c("LikeRESP_ParentPre","LikeRESP_ParentPost","LikeRESP_AlonePre","LikeRESP_AlonePost")
#turn to long format
DBehav_Longdif <- reshape(DBehav_Longdif,idvar="Subject", timevar = "versiontime",
varying=colnames(DBehav_Longdif)[2:9],direction="long", sep="_")
DBehav_Longdif$version <-NA
DBehav_Longdif$version[DBehav_Longdif$versiontime=="ParentPre"|DBehav_Longdif$versiontime=="ParentPost"] <- "Parent"
DBehav_Longdif$version[DBehav_Longdif$versiontime=="AlonePre"|DBehav_Longdif$versiontime=="AlonePost"] <- "Alone"
DBehav_Longdif$time <-NA
DBehav_Longdif$time[DBehav_Longdif$versiontime=="ParentPre"| DBehav_Longdif$versiontime=="AlonePre"] <- "1Pre"
DBehav_Longdif$time[DBehav_Longdif$versiontime=="ParentPost"| DBehav_Longdif$versiontime=="AlonePost"] <- "2Post"
#verify that means stay the same after reshaping
describeBy(data=DBehav_Longdif, LikeRESP ~ time+version)
describeBy(data=DBehav_Longdif, NervousRESP ~ time+version)
#all good
DParentOrderLong <- DParentInfo[,c("Subject","Scan_Parent","Scan_Alone")]
DParentOrderLong <- reshape(DParentOrderLong, idvar="Subject", timevar="Parent_Alone",
varying=colnames(DParentOrderLong)[2:3],direction="long",sep="_")
colnames(DParentOrderLong)[colnames(DParentOrderLong)=="Scan"] <- "order"
#create a semi long format for controling baseline analysis
DBehav_Longdif_pre <- DBehav_Longdif[DBehav_Longdif$time=="1Pre",]
colnames(DBehav_Longdif_pre)[c(which(colnames(DBehav_Longdif_pre)=="LikeRESP"), which(colnames(DBehav_Longdif_pre)=="NervousRESP"))] <- c("LikeRESP_pre","NervousRESP_pre")
DBehav_Longdif_post <- DBehav_Longdif[DBehav_Longdif$time=="2Post",]
colnames(DBehav_Longdif_post)[c(which(colnames(DBehav_Longdif_post)=="LikeRESP"), which(colnames(DBehav_Longdif_post)=="NervousRESP"))] <- c("LikeRESP_post","NervousRESP_post")
DBehav_semiLongdif <- merge(DBehav_Longdif_pre,DBehav_Longdif_post, by=c("Subject","version"))
#like question analysis controlling for baseline measures (i.e., examining post treatment controlling for pre-treatment)
#https://www.middleprofessor.com/files/applied-biostatistics_bookdown/_book/models-for-longitudinal-experiments-pre-post-designs.html
model_like_baseline <-lmer(data= DBehav_semiLongdif, LikeRESP_post~version+LikeRESP_pre+(1|Subject))
report(model_like_baseline)
#add sex, age and order information
colnames(DBehav_Longdif)[which(colnames(DBehav_Longdif)=="version")] <- "Parent_Alone"
DBehav_Longdif <- merge(DBehav_Longdif,DBehav_Wide[,c("Subject","SEX","MRI_AGE")],
by="Subject", all.x=T, all.y=F)
#attach parent-alone information
DBehav_Longdif <- merge(DBehav_Longdif, DParentOrderLong, by=c("Subject","Parent_Alone"), all.x=T, all.y=F)
colnames(DBehav_Longdif)[which(colnames(DBehav_Longdif)=="Parent_Alone")] <- "version"
#two-way anova
LikeRESP_anovatest <- anova_test(data = DBehav_Longdif, dv = LikeRESP, wid = Subject,within = c(version, time), type=3, effect.size = "pes")
get_anova_table(LikeRESP_anovatest, correction ="GG")
#two-way anova with order as a covariate
LikeRESP_anovatest <- anova_test(data = DBehav_Longdif, dv = LikeRESP, wid = Subject,within = c(version, time),covariate=c(order), type=3, effect.size = "pes")
#contrast 1
DROI_mPFC_plusmin_cond1 <- read.csv ("../data/ROI_BA102432_-20-10_plusmin_cond1.csv")
valid_subj <- read.csv ("../data/valid_participant_list.csv")
DROI_mPFC_plusmin_cond1$Subject <- rep(valid_subj$Subject, each=2)
DROI_mPFC_plusmin_cond1$Subject <- as.numeric(gsub("sub-","",DROI_mPFC_plusmin_cond1$Subject))
DROI_mPFC_plusmin_cond1$contrast <- rep(c("plus_baseline","minus_baseline"),times=nrow(valid_subj))
DROI_mPFC_plusmin_cond1 <- reshape(DROI_mPFC_plusmin_cond1, timevar="contrast",idvar="Subject", direction="wide")
DROI_mPFC_plusmin_cond1$order <- "cond1"
#contrast 2
DROI_mPFC_plusmin_cond2 <- read.csv ("../data/ROI_BA102432_-20-10_plusmin_cond2.csv")
DROI_mPFC_plusmin_cond2$Subject <- rep(valid_subj$Subject, each=2)
DROI_mPFC_plusmin_cond2$Subject <- as.numeric(gsub("sub-","",DROI_mPFC_plusmin_cond2$Subject))
DROI_mPFC_plusmin_cond2$contrast <- rep(c("plus_baseline","minus_baseline"),times=nrow(valid_subj))
DROI_mPFC_plusmin_cond2 <- reshape(DROI_mPFC_plusmin_cond2, timevar="contrast",idvar="Subject", direction="wide")
DROI_mPFC_plusmin_cond2$order <- "cond2"
#combine conditions
DROI_mPFC_plusmin <- rbind(DROI_mPFC_plusmin_cond1,DROI_mPFC_plusmin_cond2)
#merge with parent/alone version
DROI_mPFC_plusmin <- merge(DROI_mPFC_plusmin,DParentOrderLong, by=c("Subject","order"), all.x=T, all.y=F)
#merge with sex and age
DROI_mPFC_plusmin <- merge(DROI_mPFC_plusmin,DBehav_Wide[,c("Subject","SEX","MRI_AGE")],
by="Subject", all.x=T, all.y=F)
#turn to numeric and scale
#create age groups- divide the sample according to children (under 11) and adolescents (age cutoff according to gee 2014)
DROI_mPFC_plusmin <- DROI_mPFC_plusmin %>%
dplyr::mutate(SEX_num = ifelse(SEX=="m",0,1),
SEX_num_c = scale(SEX_num,scale=F),
Parent_Alone_num = ifelse(Parent_Alone=="Alone",0,1),
Parent_Alone_num_c = scale(Parent_Alone_num,scale=F),
MRI_AGE_c = scale(MRI_AGE, scale=F),
MRI_AGE_group = ifelse(MRI_AGE<11,"child","adolescent"),
order_num = ifelse(order=="cond1",0,1),
order_num_c = scale(order_num, scale=F))
View(DROI_mPFC_plusmin)
lmer_mPFC_plus_baseline<-lmer(data= DROI_mPFC_plusmin, mPFC_activation.plus_baseline~Parent_Alone+(1|Subject))
report(lmer_mPFC_plus_baseline)
lmer_mPFC_minus_baseline<-lmer(data= DROI_mPFC_plusmin, mPFC_activation.minus_baseline~Parent_Alone+(1|Subject))
report(lmer_mPFC_minus_baseline)
describeBy(data=DROI_mPFC_plusmin, mPFC_activation.plus_baseline ~Parent_Alone)
describeBy(data=DROI_mPFC_plusmin, mPFC_activation.minus_baseline ~Parent_Alone)
lmer_mPFC_plus_baseline<-lmer(data= DROI_mPFC_plusmin, mPFC_activation.plus_baseline~Parent_Alone+(1|Subject))
report(lmer_mPFC_plus_baseline)
lmer_mPFC_plus_baseline<-lmer(data= DROI_mPFC_plusmin, mPFC_activation.plus_baseline~Parent_Alone_num_c+(1|Subject))
report(lmer_mPFC_plus_baseline)
lmer_mPFC_minus_baseline<-lmer(data= DROI_mPFC_plusmin, mPFC_activation.minus_baseline~Parent_Alone_num_c+(1|Subject))
report(lmer_mPFC_minus_baseline)
lmer_mPFC_plus_baseline<-lmer(data= DROI_mPFC_plusmin, mPFC_activation.plus_baseline~Parent_Alone_num+(1|Subject))
report(lmer_mPFC_plus_baseline)
lmer_mPFC_plus_baseline<-lmer(data= DROI_mPFC_plusmin, mPFC_activation.plus_baseline~Parent_Alone+(1|Subject))
report(lmer_mPFC_plus_baseline)
lmer_mPFC_plus_baseline<-lmer(data= DROI_mPFC_plusmin, mPFC_activation.plus_baseline~as.factor(Parent_Alone)+(1|Subject))
report(lmer_mPFC_plus_baseline)
rm(list = ls())
cat ("\014")
if(is.null(dev.list()) == FALSE) dev.off()
#Packages
packages <- c('reshape','psych','rstatix','tidyverse', 'Rmisc', 'lme4','ggpubr','report','gridExtra')
lapply(packages, require, character.only = TRUE)
#load data
D <- read.csv("../data/Class_cond_Behav_all_030422.csv")
#arrange response vars (like+nervous questions)
DBehav <-D[!is.na(D$LikePre.RESP)|!is.na(D$LikePost.RESP),] #take only rating trials
DBehav$Like.RESP <- NA
DBehav$Like.RESP[!is.na(DBehav$LikePre.RESP)]  <- DBehav$LikePre.RESP[!is.na(DBehav$LikePre.RESP)]
DBehav$Like.RESP[!is.na(DBehav$LikePost.RESP)] <- DBehav$LikePost.RESP[!is.na(DBehav$LikePost.RESP)]
DBehav$Nervous.RESP <- NA
DBehav$Nervous.RESP[!is.na(DBehav$NervousPre.RESP)]  <- DBehav$NervousPre.RESP[!is.na(DBehav$NervousPre.RESP)]
DBehav$Nervous.RESP[!is.na(DBehav$NervousPost.RESP)] <- DBehav$NervousPost.RESP[!is.na(DBehav$NervousPost.RESP)]
DBehav$time <- NA
DBehav$time[!is.na(DBehav$LikePre.RESP)]  <-"Pre"
DBehav$time[!is.na(DBehav$LikePost.RESP)] <-"Post"
DBehav$version_time_and_stim <- paste0(DBehav$Version,"_",DBehav$time,"_",DBehav$Shape)
#take only relevant vars
DBehav <- DBehav[,c("Subject","DataFile.Basename","Like.RESP","Nervous.RESP","version_time_and_stim")]
#remove version V1_REG of subject EL062  (a redundant, wrong file)
DBehav <- DBehav[!(DBehav$Subject==62 & DBehav$DataFile.Basename=="Class_cond_v1_REG-0062-1"),]
#turn to wide format
#ignore warning message (refers to a subject who is about to be removed from the file anyway)
DBehav_Wide <- reshape(DBehav, timevar="version_time_and_stim",idvar="Subject", direction="wide")
#import condition data
DParentInfo <- read.csv("../data/ClassCond_ParentConditionData.csv")
DBehav_Wide <- merge(DBehav_Wide,DParentInfo[,c("Subject","Version_Parent","Version_Alone","First_Cond")], by="Subject", all.x=T, all.y=F)
#import data
DDemographics <- read.csv("../data/ELFK_demographics.csv")
DBehav_Wide <- merge(DBehav_Wide,DDemographics[,c("Subject","SEX","MRI_AGE","DEM_4_RACE_CHILD","DEM_4_RACE_CHILD_OTHER")], by="Subject", all.x=T, all.y=F)
#check demographic details
#age
summary(DBehav_Wide$MRI_AGE)
sd(DBehav_Wide$MRI_AGE, na.rm=T)
#sex
summary(as.factor(DBehav_Wide$SEX))
#race
summary(as.factor(DBehav_Wide$DEM_4_RACE_CHILD))
#remove children from the caregiving related early adversities group
crEAsgroup <-c("6","60","97","98","99","101","102")
for (i in crEAsgroup){DBehav <- DBehav[DBehav$Subject!=i,]}
for (i in crEAsgroup){DBehav_Wide <- DBehav_Wide[DBehav_Wide$Subject!=i,]}
#check age, sex and race without them
#age
summary(DBehav_Wide$MRI_AGE)
sd(DBehav_Wide$MRI_AGE, na.rm=T)
#sex
summary(as.factor(DBehav_Wide$SEX))
#race
summary(as.factor(DBehav_Wide$DEM_4_RACE_CHILD))
#remove subjects 76 and 80 (experimenter error- watched the same shapes in both parent and alone condition)
#remove subjects 24 and 88 (did not complete both conditions)
DBehav <- DBehav[DBehav$Subject!=76 & DBehav$Subject!=80 & DBehav$Subject!=24 & DBehav$Subject!=88,]
DBehav_Wide <- DBehav_Wide[DBehav_Wide$Subject!=76 & DBehav_Wide$Subject!=80 & DBehav_Wide$Subject!=24 & DBehav_Wide$Subject!=88,]
#check age, sex and race for the final behavioral sample
#age
summary(DBehav_Wide$MRI_AGE)
sd(DBehav_Wide$MRI_AGE, na.rm=T)
#sex
summary(as.factor(DBehav_Wide$SEX))
#race
summary(as.factor(DBehav_Wide$DEM_4_RACE_CHILD))
#like question
DBehav_Wide$ParentPre_CSPlus <- NA
DBehav_Wide$ParentPre_CSMinus <- NA
DBehav_Wide$AlonePre_CSPlus <- NA
DBehav_Wide$AlonePre_CSMinus <- NA
DBehav_Wide$ParentPost_CSPlus <- NA
DBehav_Wide$ParentPost_CSMinus <- NA
DBehav_Wide$AlonePost_CSPlus <- NA
DBehav_Wide$AlonePost_CSMinus <- NA
DBehav_Wide$ParentPre_CSPlus[DBehav_Wide$Version_Parent=="V1"]   <-DBehav_Wide$Like.RESP.v1_Pre_CSPlus[DBehav_Wide$Version_Parent=="V1"]
DBehav_Wide$ParentPre_CSPlus[DBehav_Wide$Version_Parent=="V2"]   <-DBehav_Wide$Like.RESP.v2_Pre_CSPlus[DBehav_Wide$Version_Parent=="V2"]
DBehav_Wide$ParentPre_CSMinus[DBehav_Wide$Version_Parent=="V1"]  <-DBehav_Wide$Like.RESP.v1_Pre_CSMinus[DBehav_Wide$Version_Parent=="V1"]
DBehav_Wide$ParentPre_CSMinus[DBehav_Wide$Version_Parent=="V2"]  <-DBehav_Wide$Like.RESP.v2_Pre_CSMinus[DBehav_Wide$Version_Parent=="V2"]
DBehav_Wide$ParentPost_CSPlus[DBehav_Wide$Version_Parent=="V1"]  <-DBehav_Wide$Like.RESP.v1_Post_CSPlus[DBehav_Wide$Version_Parent=="V1"]
DBehav_Wide$ParentPost_CSPlus[DBehav_Wide$Version_Parent=="V2"]  <-DBehav_Wide$Like.RESP.v2_Post_CSPlus[DBehav_Wide$Version_Parent=="V2"]
DBehav_Wide$ParentPost_CSMinus[DBehav_Wide$Version_Parent=="V1"] <-DBehav_Wide$Like.RESP.v1_Post_CSMinus[DBehav_Wide$Version_Parent=="V1"]
DBehav_Wide$ParentPost_CSMinus[DBehav_Wide$Version_Parent=="V2"] <-DBehav_Wide$Like.RESP.v2_Post_CSMinus[DBehav_Wide$Version_Parent=="V2"]
DBehav_Wide$AlonePre_CSPlus[DBehav_Wide$Version_Alone=="V1"]   <-DBehav_Wide$Like.RESP.v1_Pre_CSPlus[DBehav_Wide$Version_Alone=="V1"]
DBehav_Wide$AlonePre_CSPlus[DBehav_Wide$Version_Alone=="V2"]   <-DBehav_Wide$Like.RESP.v2_Pre_CSPlus[DBehav_Wide$Version_Alone=="V2"]
DBehav_Wide$AlonePre_CSMinus[DBehav_Wide$Version_Alone=="V1"]  <-DBehav_Wide$Like.RESP.v1_Pre_CSMinus[DBehav_Wide$Version_Alone=="V1"]
DBehav_Wide$AlonePre_CSMinus[DBehav_Wide$Version_Alone=="V2"]  <-DBehav_Wide$Like.RESP.v2_Pre_CSMinus[DBehav_Wide$Version_Alone=="V2"]
DBehav_Wide$AlonePost_CSPlus[DBehav_Wide$Version_Alone=="V1"]  <-DBehav_Wide$Like.RESP.v1_Post_CSPlus[DBehav_Wide$Version_Alone=="V1"]
DBehav_Wide$AlonePost_CSPlus[DBehav_Wide$Version_Alone=="V2"]  <-DBehav_Wide$Like.RESP.v2_Post_CSPlus[DBehav_Wide$Version_Alone=="V2"]
DBehav_Wide$AlonePost_CSMinus[DBehav_Wide$Version_Alone=="V1"] <-DBehav_Wide$Like.RESP.v1_Post_CSMinus[DBehav_Wide$Version_Alone=="V1"]
DBehav_Wide$AlonePost_CSMinus[DBehav_Wide$Version_Alone=="V2"] <-DBehav_Wide$Like.RESP.v2_Post_CSMinus[DBehav_Wide$Version_Alone=="V2"]
#nervous question
DBehav_Wide$ParentPre_CSPlus.ner <- NA
DBehav_Wide$ParentPre_CSMinus.ner <- NA
DBehav_Wide$AlonePre_CSPlus.ner <- NA
DBehav_Wide$AlonePre_CSMinus.ner <- NA
DBehav_Wide$ParentPost_CSPlus.ner <- NA
DBehav_Wide$ParentPost_CSMinus.ner <- NA
DBehav_Wide$AlonePost_CSPlus.ner <- NA
DBehav_Wide$AlonePost_CSMinus.ner <- NA
DBehav_Wide$ParentPre_CSPlus.ner[DBehav_Wide$Version_Parent=="V1"]   <-DBehav_Wide$Nervous.RESP.v1_Pre_CSPlus[DBehav_Wide$Version_Parent=="V1"]
DBehav_Wide$ParentPre_CSPlus.ner[DBehav_Wide$Version_Parent=="V2"]   <-DBehav_Wide$Nervous.RESP.v2_Pre_CSPlus[DBehav_Wide$Version_Parent=="V2"]
DBehav_Wide$ParentPre_CSMinus.ner[DBehav_Wide$Version_Parent=="V1"]  <-DBehav_Wide$Nervous.RESP.v1_Pre_CSMinus[DBehav_Wide$Version_Parent=="V1"]
DBehav_Wide$ParentPre_CSMinus.ner[DBehav_Wide$Version_Parent=="V2"]  <-DBehav_Wide$Nervous.RESP.v2_Pre_CSMinus[DBehav_Wide$Version_Parent=="V2"]
DBehav_Wide$ParentPost_CSPlus.ner[DBehav_Wide$Version_Parent=="V1"]  <-DBehav_Wide$Nervous.RESP.v1_Post_CSPlus[DBehav_Wide$Version_Parent=="V1"]
DBehav_Wide$ParentPost_CSPlus.ner[DBehav_Wide$Version_Parent=="V2"]  <-DBehav_Wide$Nervous.RESP.v2_Post_CSPlus[DBehav_Wide$Version_Parent=="V2"]
DBehav_Wide$ParentPost_CSMinus.ner[DBehav_Wide$Version_Parent=="V1"] <-DBehav_Wide$Nervous.RESP.v1_Post_CSMinus[DBehav_Wide$Version_Parent=="V1"]
DBehav_Wide$ParentPost_CSMinus.ner[DBehav_Wide$Version_Parent=="V2"] <-DBehav_Wide$Nervous.RESP.v2_Post_CSMinus[DBehav_Wide$Version_Parent=="V2"]
DBehav_Wide$AlonePre_CSPlus.ner[DBehav_Wide$Version_Alone=="V1"]   <-DBehav_Wide$Nervous.RESP.v1_Pre_CSPlus[DBehav_Wide$Version_Alone=="V1"]
DBehav_Wide$AlonePre_CSPlus.ner[DBehav_Wide$Version_Alone=="V2"]   <-DBehav_Wide$Nervous.RESP.v2_Pre_CSPlus[DBehav_Wide$Version_Alone=="V2"]
DBehav_Wide$AlonePre_CSMinus.ner[DBehav_Wide$Version_Alone=="V1"]  <-DBehav_Wide$Nervous.RESP.v1_Pre_CSMinus[DBehav_Wide$Version_Alone=="V1"]
DBehav_Wide$AlonePre_CSMinus.ner[DBehav_Wide$Version_Alone=="V2"]  <-DBehav_Wide$Nervous.RESP.v2_Pre_CSMinus[DBehav_Wide$Version_Alone=="V2"]
DBehav_Wide$AlonePost_CSPlus.ner[DBehav_Wide$Version_Alone=="V1"]  <-DBehav_Wide$Nervous.RESP.v1_Post_CSPlus[DBehav_Wide$Version_Alone=="V1"]
DBehav_Wide$AlonePost_CSPlus.ner[DBehav_Wide$Version_Alone=="V2"]  <-DBehav_Wide$Nervous.RESP.v2_Post_CSPlus[DBehav_Wide$Version_Alone=="V2"]
DBehav_Wide$AlonePost_CSMinus.ner[DBehav_Wide$Version_Alone=="V1"] <-DBehav_Wide$Nervous.RESP.v1_Post_CSMinus[DBehav_Wide$Version_Alone=="V1"]
DBehav_Wide$AlonePost_CSMinus.ner[DBehav_Wide$Version_Alone=="V2"] <-DBehav_Wide$Nervous.RESP.v2_Post_CSMinus[DBehav_Wide$Version_Alone=="V2"]
#first, create a variable for each run order (v1 and v2)
#like question
#a more positive score means that the CS+ was more liked than the CS-
DBehav_Wide$v1_Pre_PlusMinMinus  <- DBehav_Wide$Like.RESP.v1_Pre_CSPlus - DBehav_Wide$Like.RESP.v1_Pre_CSMinus
DBehav_Wide$v1_Post_PlusMinMinus <- DBehav_Wide$Like.RESP.v1_Post_CSPlus- DBehav_Wide$Like.RESP.v1_Post_CSMinus
DBehav_Wide$v2_Pre_PlusMinMinus  <- DBehav_Wide$Like.RESP.v2_Pre_CSPlus - DBehav_Wide$Like.RESP.v2_Pre_CSMinus
DBehav_Wide$v2_Post_PlusMinMinus <- DBehav_Wide$Like.RESP.v2_Post_CSPlus- DBehav_Wide$Like.RESP.v2_Post_CSMinus
#nervous question
#a more positive score means that the CS+ made participants more nervous than the CS-
DBehav_Wide$v1_Pre_PlusMinMinus.ner  <- DBehav_Wide$Nervous.RESP.v1_Pre_CSPlus - DBehav_Wide$Nervous.RESP.v1_Pre_CSMinus
DBehav_Wide$v1_Post_PlusMinMinus.ner <- DBehav_Wide$Nervous.RESP.v1_Post_CSPlus- DBehav_Wide$Nervous.RESP.v1_Post_CSMinus
DBehav_Wide$v2_Pre_PlusMinMinus.ner  <- DBehav_Wide$Nervous.RESP.v2_Pre_CSPlus - DBehav_Wide$Nervous.RESP.v2_Pre_CSMinus
DBehav_Wide$v2_Post_PlusMinMinus.ner <- DBehav_Wide$Nervous.RESP.v2_Post_CSPlus- DBehav_Wide$Nervous.RESP.v2_Post_CSMinus
#next, create difference score according to condition (parent vs. alone)
#Like question
DBehav_Wide$Parent_Pre_PlusMinMinus <- NA
DBehav_Wide$Alone_Pre_PlusMinMinus <- NA
DBehav_Wide$Parent_Post_PlusMinMinus <- NA
DBehav_Wide$Alone_Post_PlusMinMinus <- NA
DBehav_Wide$Parent_Pre_PlusMinMinus[DBehav_Wide$Version_Parent=="V1"] <-DBehav_Wide$v1_Pre_PlusMinMinus[DBehav_Wide$Version_Parent=="V1"]
DBehav_Wide$Parent_Pre_PlusMinMinus[DBehav_Wide$Version_Parent=="V2"] <-DBehav_Wide$v2_Pre_PlusMinMinus[DBehav_Wide$Version_Parent=="V2"]
DBehav_Wide$Alone_Pre_PlusMinMinus[DBehav_Wide$Version_Alone=="V1"] <-DBehav_Wide$v1_Pre_PlusMinMinus[DBehav_Wide$Version_Alone=="V1"]
DBehav_Wide$Alone_Pre_PlusMinMinus[DBehav_Wide$Version_Alone=="V2"] <-DBehav_Wide$v2_Pre_PlusMinMinus[DBehav_Wide$Version_Alone=="V2"]
DBehav_Wide$Parent_Post_PlusMinMinus[DBehav_Wide$Version_Parent=="V1"] <-DBehav_Wide$v1_Post_PlusMinMinus[DBehav_Wide$Version_Parent=="V1"]
DBehav_Wide$Parent_Post_PlusMinMinus[DBehav_Wide$Version_Parent=="V2"] <-DBehav_Wide$v2_Post_PlusMinMinus[DBehav_Wide$Version_Parent=="V2"]
DBehav_Wide$Alone_Post_PlusMinMinus[DBehav_Wide$Version_Alone=="V1"] <-DBehav_Wide$v1_Post_PlusMinMinus[DBehav_Wide$Version_Alone=="V1"]
DBehav_Wide$Alone_Post_PlusMinMinus[DBehav_Wide$Version_Alone=="V2"] <-DBehav_Wide$v2_Post_PlusMinMinus[DBehav_Wide$Version_Alone=="V2"]
#Nervous question
DBehav_Wide$Parent_Pre_PlusMinMinus.ner <- NA
DBehav_Wide$Alone_Pre_PlusMinMinus.ner <- NA
DBehav_Wide$Parent_Post_PlusMinMinus.ner <- NA
DBehav_Wide$Alone_Post_PlusMinMinus.ner <- NA
DBehav_Wide$Parent_Pre_PlusMinMinus.ner[DBehav_Wide$Version_Parent=="V1"] <-DBehav_Wide$v1_Pre_PlusMinMinus.ner[DBehav_Wide$Version_Parent=="V1"]
DBehav_Wide$Parent_Pre_PlusMinMinus.ner[DBehav_Wide$Version_Parent=="V2"] <-DBehav_Wide$v2_Pre_PlusMinMinus.ner[DBehav_Wide$Version_Parent=="V2"]
DBehav_Wide$Alone_Pre_PlusMinMinus.ner[DBehav_Wide$Version_Alone=="V1"] <-DBehav_Wide$v1_Pre_PlusMinMinus.ner[DBehav_Wide$Version_Alone=="V1"]
DBehav_Wide$Alone_Pre_PlusMinMinus.ner[DBehav_Wide$Version_Alone=="V2"] <-DBehav_Wide$v2_Pre_PlusMinMinus.ner[DBehav_Wide$Version_Alone=="V2"]
DBehav_Wide$Parent_Post_PlusMinMinus.ner[DBehav_Wide$Version_Parent=="V1"] <-DBehav_Wide$v1_Post_PlusMinMinus.ner[DBehav_Wide$Version_Parent=="V1"]
DBehav_Wide$Parent_Post_PlusMinMinus.ner[DBehav_Wide$Version_Parent=="V2"] <-DBehav_Wide$v2_Post_PlusMinMinus.ner[DBehav_Wide$Version_Parent=="V2"]
DBehav_Wide$Alone_Post_PlusMinMinus.ner[DBehav_Wide$Version_Alone=="V1"] <-DBehav_Wide$v1_Post_PlusMinMinus.ner[DBehav_Wide$Version_Alone=="V1"]
DBehav_Wide$Alone_Post_PlusMinMinus.ner[DBehav_Wide$Version_Alone=="V2"] <-DBehav_Wide$v2_Post_PlusMinMinus.ner[DBehav_Wide$Version_Alone=="V2"]
#like question
describe(DBehav_Wide[,c("ParentPre_CSMinus","ParentPost_CSMinus","ParentPre_CSPlus","ParentPost_CSPlus",
"AlonePre_CSMinus","AlonePost_CSMinus","AlonePre_CSPlus","AlonePost_CSPlus")])
#nervous question
describe (DBehav_Wide[,c("ParentPre_CSMinus.ner","ParentPost_CSMinus.ner","ParentPre_CSPlus.ner","ParentPost_CSPlus.ner",
"AlonePre_CSMinus.ner","AlonePost_CSMinus.ner","AlonePre_CSPlus.ner","AlonePost_CSPlus.ner")])
#difference score-like question
describe(DBehav_Wide[,c("Parent_Pre_PlusMinMinus","Parent_Post_PlusMinMinus",
"Alone_Pre_PlusMinMinus","Alone_Post_PlusMinMinus")])
#difference score-nervous question
describe(DBehav_Wide[,c("Parent_Pre_PlusMinMinus.ner","Parent_Post_PlusMinMinus.ner",
"Alone_Pre_PlusMinMinus.ner","Alone_Post_PlusMinMinus.ner")])
#relation with sex
t.test (data = DBehav_Wide, Parent_Pre_PlusMinMinus ~ SEX)
t.test (data = DBehav_Wide, Parent_Post_PlusMinMinus ~ SEX)
t.test (data = DBehav_Wide, Alone_Pre_PlusMinMinus ~ SEX)
t.test (data = DBehav_Wide, Alone_Post_PlusMinMinus ~ SEX)
t.test (data = DBehav_Wide, Parent_Pre_PlusMinMinus.ner ~ SEX)
t.test (data = DBehav_Wide, Parent_Post_PlusMinMinus.ner ~ SEX)
t.test (data = DBehav_Wide, Alone_Pre_PlusMinMinus.ner ~ SEX)
t.test (data = DBehav_Wide, Alone_Post_PlusMinMinus.ner ~ SEX)
#relation with age
cor.test (DBehav_Wide$Parent_Pre_PlusMinMinus, DBehav_Wide$MRI_AGE )
cor.test (DBehav_Wide$Parent_Post_PlusMinMinus, DBehav_Wide$MRI_AGE )
cor.test (DBehav_Wide$Alone_Pre_PlusMinMinus, DBehav_Wide$MRI_AGE )
cor.test (DBehav_Wide$Alone_Post_PlusMinMinus, DBehav_Wide$MRI_AGE )
cor.test (DBehav_Wide$Parent_Pre_PlusMinMinus.ner, DBehav_Wide$MRI_AGE )
cor.test (DBehav_Wide$Parent_Post_PlusMinMinus.ner, DBehav_Wide$MRI_AGE )
cor.test (DBehav_Wide$Alone_Pre_PlusMinMinus.ner, DBehav_Wide$MRI_AGE )
cor.test (DBehav_Wide$Alone_Post_PlusMinMinus.ner, DBehav_Wide$MRI_AGE )
DBehav_Longdif <- DBehav_Wide[,c("Subject",
"Parent_Pre_PlusMinMinus","Parent_Post_PlusMinMinus",
"Alone_Pre_PlusMinMinus","Alone_Post_PlusMinMinus",
"Parent_Pre_PlusMinMinus.ner","Parent_Post_PlusMinMinus.ner",
"Alone_Pre_PlusMinMinus.ner","Alone_Post_PlusMinMinus.ner")]
#change vars names
colnames(DBehav_Longdif) <- gsub("_PlusMinMinus","",colnames(DBehav_Longdif))
colnames(DBehav_Longdif) <- gsub("_","",colnames(DBehav_Longdif))
col <- colnames(DBehav_Longdif)
colnames(DBehav_Longdif)[c(which(col=="ParentPre.ner"),which(col=="ParentPost.ner"),which(col=="AlonePre.ner"),which(col=="AlonePost.ner"))] <-
c("NervousRESP_ParentPre","NervousRESP_ParentPost","NervousRESP_AlonePre","NervousRESP_AlonePost")
colnames(DBehav_Longdif)[c(which(col=="ParentPre"),which(col=="ParentPost"), which(col=="AlonePre"),which(col=="AlonePost"))] <-
c("LikeRESP_ParentPre","LikeRESP_ParentPost","LikeRESP_AlonePre","LikeRESP_AlonePost")
#turn to long format
DBehav_Longdif <- reshape(DBehav_Longdif,idvar="Subject", timevar = "versiontime",
varying=colnames(DBehav_Longdif)[2:9],direction="long", sep="_")
DBehav_Longdif$version <-NA
DBehav_Longdif$version[DBehav_Longdif$versiontime=="ParentPre"|DBehav_Longdif$versiontime=="ParentPost"] <- "Parent"
DBehav_Longdif$version[DBehav_Longdif$versiontime=="AlonePre"|DBehav_Longdif$versiontime=="AlonePost"] <- "Alone"
DBehav_Longdif$time <-NA
DBehav_Longdif$time[DBehav_Longdif$versiontime=="ParentPre"| DBehav_Longdif$versiontime=="AlonePre"] <- "1Pre"
DBehav_Longdif$time[DBehav_Longdif$versiontime=="ParentPost"| DBehav_Longdif$versiontime=="AlonePost"] <- "2Post"
#verify that means stay the same after reshaping
describeBy(data=DBehav_Longdif, LikeRESP ~ time+version)
describeBy(data=DBehav_Longdif, NervousRESP ~ time+version)
#all good
DParentOrderLong <- DParentInfo[,c("Subject","Scan_Parent","Scan_Alone")]
DParentOrderLong <- reshape(DParentOrderLong, idvar="Subject", timevar="Parent_Alone",
varying=colnames(DParentOrderLong)[2:3],direction="long",sep="_")
colnames(DParentOrderLong)[colnames(DParentOrderLong)=="Scan"] <- "order"
#create a semi long format for controling baseline analysis
DBehav_Longdif_pre <- DBehav_Longdif[DBehav_Longdif$time=="1Pre",]
colnames(DBehav_Longdif_pre)[c(which(colnames(DBehav_Longdif_pre)=="LikeRESP"), which(colnames(DBehav_Longdif_pre)=="NervousRESP"))] <- c("LikeRESP_pre","NervousRESP_pre")
DBehav_Longdif_post <- DBehav_Longdif[DBehav_Longdif$time=="2Post",]
colnames(DBehav_Longdif_post)[c(which(colnames(DBehav_Longdif_post)=="LikeRESP"), which(colnames(DBehav_Longdif_post)=="NervousRESP"))] <- c("LikeRESP_post","NervousRESP_post")
DBehav_semiLongdif <- merge(DBehav_Longdif_pre,DBehav_Longdif_post, by=c("Subject","version"))
#like question analysis controlling for baseline measures (i.e., examining post treatment controlling for pre-treatment)
#https://www.middleprofessor.com/files/applied-biostatistics_bookdown/_book/models-for-longitudinal-experiments-pre-post-designs.html
model_like_baseline <-lmer(data= DBehav_semiLongdif, LikeRESP_post~version+LikeRESP_pre+(1|Subject))
report(model_like_baseline)
#add sex, age and order information
colnames(DBehav_Longdif)[which(colnames(DBehav_Longdif)=="version")] <- "Parent_Alone"
DBehav_Longdif <- merge(DBehav_Longdif,DBehav_Wide[,c("Subject","SEX","MRI_AGE")],
by="Subject", all.x=T, all.y=F)
#attach parent-alone information
DBehav_Longdif <- merge(DBehav_Longdif, DParentOrderLong, by=c("Subject","Parent_Alone"), all.x=T, all.y=F)
colnames(DBehav_Longdif)[which(colnames(DBehav_Longdif)=="Parent_Alone")] <- "version"
#two-way anova
LikeRESP_anovatest <- anova_test(data = DBehav_Longdif, dv = LikeRESP, wid = Subject,within = c(version, time), type=3, effect.size = "pes")
get_anova_table(LikeRESP_anovatest, correction ="GG")
#two-way anova with order as a covariate
LikeRESP_anovatest <- anova_test(data = DBehav_Longdif, dv = LikeRESP, wid = Subject,within = c(version, time),covariate=c(order), type=3, effect.size = "pes")
#remove nervous data of subject 56 from the alone condition (was not asked this question in the parent condition due to experimenter error)
DBehav_Longdif$NervousRESP[DBehav_Longdif$Subject==56] <- NA
DBehav_Wide$Alone_Pre_PlusMinMinus.ner[DBehav_Wide$Subject==56] <- NA
DBehav_Wide$Alone_Post_PlusMinMinus.ner[DBehav_Wide$Subject==56] <- NA
#two-way anova
NervousRESP_anovatest <- anova_test(data = DBehav_Longdif, dv = NervousRESP, wid = Subject,within = c(version, time), type=3, effect.size = "pes")
get_anova_table(NervousRESP_anovatest, correction = "GG")
#two-way anova with age as a covariate
NervousRESP_anovatest <- anova_test(data = DBehav_Longdif, dv = NervousRESP, wid = Subject,within = c(version, time),covariate=c(MRI_AGE), type=3, effect.size = "pes")
get_anova_table(NervousRESP_anovatest, correction ="GG")
#two-way anova with SEX as a covariate
NervousRESP_anovatest <- anova_test(data = DBehav_Longdif, dv = NervousRESP, wid = Subject,within = c(version, time),covariate=c(SEX), type=3, effect.size = "pes")
get_anova_table(NervousRESP_anovatest, correction ="GG")
#two-way anova with age and sex as covariates
NervousRESP_anovatest <- anova_test(data = DBehav_Longdif, dv = NervousRESP, wid = Subject,within = c(version, time),covariate=c(MRI_AGE,SEX), type=3, effect.size = "pes")
get_anova_table(NervousRESP_anovatest, correction ="GG")
#investigate the main effect of time
#combine the two conditions together
DBehav_Wide$Bothcond_Post_PlusMinMinus.ner <- rowMeans(DBehav_Wide[,c("Parent_Post_PlusMinMinus.ner","Alone_Post_PlusMinMinus.ner")],na.rm=T)
DBehav_Wide$Bothcond_Pre_PlusMinMinus.ner <- rowMeans(DBehav_Wide[,c("Parent_Pre_PlusMinMinus.ner","Alone_Pre_PlusMinMinus.ner")],na.rm=T)
describe(DBehav_Wide[,c("Bothcond_Post_PlusMinMinus.ner","Bothcond_Pre_PlusMinMinus.ner")])
t.test (DBehav_Wide$Bothcond_Post_PlusMinMinus.ner,DBehav_Wide$Bothcond_Pre_PlusMinMinus.ner,paired = TRUE, alternative = "two.sided")
model_nervous <-lmer(data= DBehav_Longdif, NervousRESP~version_num_c*time_num_c+(1|Subject))
#contrast 1
DROI_mPFC_plusmin_cond1 <- read.csv ("../data/ROI_BA102432_-20-10_plusmin_cond1.csv")
valid_subj <- read.csv ("../data/valid_participant_list.csv")
DROI_mPFC_plusmin_cond1$Subject <- rep(valid_subj$Subject, each=2)
DROI_mPFC_plusmin_cond1$Subject <- as.numeric(gsub("sub-","",DROI_mPFC_plusmin_cond1$Subject))
DROI_mPFC_plusmin_cond1$contrast <- rep(c("plus_baseline","minus_baseline"),times=nrow(valid_subj))
DROI_mPFC_plusmin_cond1 <- reshape(DROI_mPFC_plusmin_cond1, timevar="contrast",idvar="Subject", direction="wide")
DROI_mPFC_plusmin_cond1$order <- "cond1"
#contrast 2
DROI_mPFC_plusmin_cond2 <- read.csv ("../data/ROI_BA102432_-20-10_plusmin_cond2.csv")
DROI_mPFC_plusmin_cond2$Subject <- rep(valid_subj$Subject, each=2)
DROI_mPFC_plusmin_cond2$Subject <- as.numeric(gsub("sub-","",DROI_mPFC_plusmin_cond2$Subject))
DROI_mPFC_plusmin_cond2$contrast <- rep(c("plus_baseline","minus_baseline"),times=nrow(valid_subj))
DROI_mPFC_plusmin_cond2 <- reshape(DROI_mPFC_plusmin_cond2, timevar="contrast",idvar="Subject", direction="wide")
DROI_mPFC_plusmin_cond2$order <- "cond2"
#combine conditions
DROI_mPFC_plusmin <- rbind(DROI_mPFC_plusmin_cond1,DROI_mPFC_plusmin_cond2)
#merge with parent/alone version
DROI_mPFC_plusmin <- merge(DROI_mPFC_plusmin,DParentOrderLong, by=c("Subject","order"), all.x=T, all.y=F)
#merge with sex and age
DROI_mPFC_plusmin <- merge(DROI_mPFC_plusmin,DBehav_Wide[,c("Subject","SEX","MRI_AGE")],
by="Subject", all.x=T, all.y=F)
View(DROI_mPFC_plusmin)
#turn to numeric and scale
#create age groups- divide the sample according to children (under 11) and adolescents (age cutoff according to gee 2014)
DROI_mPFC_plusmin <- DROI_mPFC_plusmin %>%
dplyr::mutate(SEX_num = ifelse(SEX=="m",0,1),
SEX_num_c = scale(SEX_num,scale=F),
Parent_Alone_num = ifelse(Parent_Alone=="Alone",0,1),
Parent_Alone_num_c = scale(Parent_Alone_num,scale=F),
MRI_AGE_c = scale(MRI_AGE, scale=F),
MRI_AGE_group = ifelse(MRI_AGE<11,"child","adolescent"),
order_num = ifelse(order=="cond1",0,1),
order_num_c = scale(order_num, scale=F))
lmer_mPFC_plus_baseline<-lmer(data= DROI_mPFC_plusmin, mPFC_activation.plus_baseline~Parent_Alone_num_c+(1|Subject))
report(lmer_mPFC_plus_baseline)
summary(lmer_mPFC_plus_baseline)
lmer_mPFC_plus_baseline<-lmer(data= DROI_mPFC_plusmin, mPFC_activation.plus_baseline~Parent_Alone+(1|Subject))
report(lmer_mPFC_plus_baseline)
summary(lmer_mPFC_plus_baseline)
lmer_mPFC_plus_baseline<-lmer(data= DROI_mPFC_plusmin, mPFC_activation.plus_baseline~Parent_Alone_num_c+(1|Subject))
report(lmer_mPFC_plus_baseline)
lmer_mPFC_minus_baseline<-lmer(data= DROI_mPFC_plusmin, mPFC_activation.minus_baseline~Parent_Alone_num_c+(1|Subject))
report(lmer_mPFC_minus_baseline)
